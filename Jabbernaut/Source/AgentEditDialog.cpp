///--------------------------------------------------------------------------------------//	File:		AgentEditDialog.cpp//	Project:	Jabbernaut////	Purpose:	View/edit the properties of an agent//	Created:	Wednesday, 2000-08-02//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------///- Includes ---------------------------------------------------------------------------#pragma mark === Includes ===#include	"MacZoop.h"#include	"AgentEditDialog.h"#include	"ConnectionManager.h"#include	"RegisterManager.h"#include	"SearchManager.h"#include	"ZHLAgentItem.h"#include	"RegisterMsg.h"///- Contants ---------------------------------------------------------------------------#pragma mark -#pragma mark === Contants ===const short kAgentEditDialogID = 1011;enum{	kAgentEditRegisterBtnID		= 1,	kAgentEditUnregisterBtnID	= 2,	kAgentEditSearchBtnID		= 3,	kAgentEditNameID			= 4,	kAgentEditDescriptionID		= 6,	kAgentEditJIDID				= 8,	kAgentEditServiceID			= 10,	kAgentEditTransportID		= 12,	kAgentEditGroupchatID		= 14};#pragma mark -#pragma mark [Class Init]///--------------------------------------------------------------------------------------//	¥ Constructor:///--------------------------------------------------------------------------------------AgentEditDialog::AgentEditDialog( ZHLAgentItem *boss )	: inherited( gApplication, kAgentEditDialogID ), mZHLAgentItem(boss){	defaultItem = 0;	escapeItem = 0;}///--------------------------------------------------------------------------------------//	¥ Destructor:///--------------------------------------------------------------------------------------AgentEditDialog::~AgentEditDialog(){	if( mZHLAgentItem )		mZHLAgentItem->mEditDialog = NULL;}#pragma mark -///--------------------------------------------------------------------------------------//	InitZWindow://		Init the dialog contents//		//	Changes://		2000-08-02	MH		Created///--------------------------------------------------------------------------------------void	AgentEditDialog::InitZWindow(){	// first, call the inherited method and let is setup the dialog	inherited::InitZWindow();		SyncWithZHLAgentItem();}#pragma mark -///--------------------------------------------------------------------------------------//	SyncWithZHLAgentItem://		Init the dialog contents//		//	Changes://		2000-08-02	MH		Created///--------------------------------------------------------------------------------------void	AgentEditDialog::SyncWithZHLAgentItem(){	ASSERT("mZHLAgentItem == NULL",mZHLAgentItem != NULL,0);	if( mZHLAgentItem->mRegisterable )	{		ShowItem( kAgentEditRegisterBtnID );		ShowItem( kAgentEditUnregisterBtnID );	}	else		HideItem( kAgentEditRegisterBtnID );// The following code is disabled since several agents do *not* propely// report whether you are already registered or not/*	if( mZHLAgentItem->mRegistered )		ShowItem( kAgentEditUnregisterBtnID );	else		HideItem( kAgentEditUnregisterBtnID );*/	if( mZHLAgentItem->mSearchable )		ShowItem( kAgentEditSearchBtnID );	else		HideItem( kAgentEditSearchBtnID );	// FIX ME	// implement iq:search	DisableItem( kAgentEditSearchBtnID );			if( !(mZHLAgentItem->mRegisterable || mZHLAgentItem->mRegistered || mZHLAgentItem->mSearchable))	{		// Shrink window?!?	}		SetValueAsString( kAgentEditNameID,			mZHLAgentItem->mName );	SetValueAsString( kAgentEditDescriptionID,	mZHLAgentItem->mDescription );	SetValueAsString( kAgentEditJIDID,			mZHLAgentItem->mJID.getFull() );	SetValueAsString( kAgentEditServiceID,		mZHLAgentItem->mService );	if( mZHLAgentItem->mTransport.empty() )		SetValueAsString( kAgentEditTransportID, "No" );	else		SetValueAsString( kAgentEditTransportID, "Yes" );	SetValueAsString( kAgentEditGroupchatID, mZHLAgentItem->mGroupchat ? "Yes" : "No" );}///--------------------------------------------------------------------------------------//	ClickItem://		Handle mouse clicks inside of the dialog//		//	Changes://		2000-08-02	MH		Created///--------------------------------------------------------------------------------------void	AgentEditDialog::ClickItem( const short theItem ){	ASSERT("mZHLAgentItem == NULL",mZHLAgentItem != NULL,0);	inherited::ClickItem( theItem );	switch( theItem )	{	case kAgentEditRegisterBtnID:		RegisterManager::DoRegister( mZHLAgentItem->mJID );		break;		case kAgentEditUnregisterBtnID:		RegisterManager::DoUnregister( mZHLAgentItem->mJID );		break;		case kAgentEditSearchBtnID:		SearchManager::GetInstance()->DoSearch( mZHLAgentItem->mJID );		break;	};}