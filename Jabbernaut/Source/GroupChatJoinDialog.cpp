///--------------------------------------------------------------------------------------//	File:		GroupChatJoinDialog.cpp//	Project:	Jabbernaut////	Purpose:	<default>//	Created:	Monday, 2000-05-22//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------///- Includes ---------------------------------------------------------------------------#pragma mark === Includes ===#include	"MacZoop.h"#include	"GroupChatJoinDialog.h"#include	"GroupChatManager.h"#include	"PrefsManager.h"#include	"Messages.h"///- Contants ---------------------------------------------------------------------------#pragma mark -#pragma mark === Contants ===enum{	kGCJoinDialogID	= 1106};enum{	kGCJoinJoinBtnID	= 1,	kGCJoinCancelBtnID	= 2,	kGCJoinNickID		= 4,	kGCJoinGroupID		= 6,	kGCJoinServerID		= 8};#pragma mark -#pragma mark [Class Init]///--------------------------------------------------------------------------------------//	¥ Constructor:///--------------------------------------------------------------------------------------GroupChatJoinDialog::GroupChatJoinDialog( ZCommander* aBoss, const short windowID  )	: inherited( aBoss, windowID ){}///--------------------------------------------------------------------------------------//	¥ Constructor:///--------------------------------------------------------------------------------------GroupChatJoinDialog::GroupChatJoinDialog()	: inherited( gApplication, kGCJoinDialogID ){}///--------------------------------------------------------------------------------------//	¥ Destructor:///--------------------------------------------------------------------------------------GroupChatJoinDialog::~GroupChatJoinDialog(){}#pragma mark -///--------------------------------------------------------------------------------------//	InitZWindow://		Setup the dialog//		//	Changes://		2000-06-30	MH		Created///--------------------------------------------------------------------------------------void	GroupChatJoinDialog::InitZWindow(){	inherited::InitZWindow();		SetValueAsString( kGCJoinNickID, PrefsManager::GetPrefsRec().mDefaultNick );}///--------------------------------------------------------------------------------------//	ClickItem://		If OK was pressed, join the group via GroupChatManager//		//	Changes://		2000-05-22	MH		Created///--------------------------------------------------------------------------------------void	GroupChatJoinDialog::ClickItem( const short theItem ){	inherited::ClickItem( theItem );		if( theItem == kGCJoinJoinBtnID )	{		MacJLib::JID		groupJID;		std::string			str;		// get the group name		GetValueAsString( kGCJoinGroupID, str );		groupJID.setUsername( str );		#if !_DEBUG_// FIX ME//add groupchat transport pop up!#endif		// get the tranport name		GetValueAsString( kGCJoinServerID, str );		groupJID.setServer( str );				// FIX ME		if( groupJID.getServer().empty() )		{			gWindowManager->DeactivateForDialog( -1, TRUE );			(void) Alert( 1202, NULL );			gWindowManager->Activate();			return;		}				// get the nick		GetValueAsString( kGCJoinNickID, str );				GroupChatManager::JoinGroupChat( groupJID, str );		Close( kRunning );	}	else if( theItem == kGCJoinCancelBtnID )	{		Close( kRunning );	}}