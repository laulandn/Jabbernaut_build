///--------------------------------------------------------------------------------------//	File:		SearchManager.cpp//	Project:	Jabbernaut////	Purpose:	Manages all agent searching related stuff//	Created:	Monday, 2000-11-06//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------///- Includes ---------------------------------------------------------------------------#pragma mark === Includes ===#include	"SearchManager.h"///- Static Members ---------------------------------------------------------------------#pragma mark -#pragma mark === Static Members ===SearchManager		*SearchManager::msInstance		= NULL;#pragma mark -///--------------------------------------------------------------------------------------//	GetInstance://		Return an instance of SearchManager//		//	Changes://		2000-10-05	MH		Created///--------------------------------------------------------------------------------------SearchManager*	SearchManager::GetInstance(){	if( !msInstance )		FailNIL( msInstance = new SearchManager() );	return msInstance;}#pragma mark -///--------------------------------------------------------------------------------------//	¥ Constructor:///--------------------------------------------------------------------------------------SearchManager::SearchManager()	: ZComrade(), MsgListener(){	FailNIL( mSearchDialogs = new ZObjectList() );	ListenTo( gWindowManager );}///--------------------------------------------------------------------------------------//	¥ Destructor:///--------------------------------------------------------------------------------------SearchManager::~SearchManager(){	msInstance = NULL;	ForgetObject( mSearchDialogs );}#pragma mark -///--------------------------------------------------------------------------------------//	ReceiveMessage://		Detect if one of our SearchDialogs was closed//		//	Changes://		2000-10-05	MH		Created///--------------------------------------------------------------------------------------void	SearchManager::ReceiveMessage( ZComrade* aSender, ZoopMessage aMsg, UntypedPtr msgData ){	ASSERT("mSearchDialogs == NULL",mSearchDialogs,0);	if( (aMsg == kWMMsgWindowRemoved) && msgData)	{		// Remove it from our list		mSearchDialogs->DeleteObject( (ZObject*)msgData );	}}#pragma mark -