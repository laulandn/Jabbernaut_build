///--------------------------------------------------------------------------------------//	File:		ChatInviteDialog.cpp//	Project:	Jabbernaut////	Purpose:	<default>//	Created:	Monday, 2000-05-23//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------///- Includes ---------------------------------------------------------------------------#pragma mark === Includes ===#include	"MacZoop.h"#include	"ChatInviteDialog.h"#include	"ChatManager.h"#include	"Messages.h"///- Contants ---------------------------------------------------------------------------#pragma mark -#pragma mark === Contants ===enum{	kChatInviteDialogID	= 1105};enum{	kChatInviteOKBtnID		= 1,	kChatInviteCancelBtnID	= 2,	kChatInviteJIDToID		= 4,	kChatInviteReasonID		= 6};#pragma mark -#pragma mark [Class Init]///--------------------------------------------------------------------------------------//	¥ Constructor:///--------------------------------------------------------------------------------------ChatInviteDialog::ChatInviteDialog( ZCommander* aBoss, const short windowID  )	: inherited( aBoss, windowID ){}///--------------------------------------------------------------------------------------//	¥ Constructor:///--------------------------------------------------------------------------------------ChatInviteDialog::ChatInviteDialog()	: inherited( gApplication, kChatInviteDialogID ){}///--------------------------------------------------------------------------------------//	¥ Destructor:///--------------------------------------------------------------------------------------ChatInviteDialog::~ChatInviteDialog(){}#pragma mark -///--------------------------------------------------------------------------------------//	InitZWindow://		//		//	Changes://		2000-05-24	MH		Created///--------------------------------------------------------------------------------------void	ChatInviteDialog::InitZWindow(){	inherited::InitZWindow();		SetValue( kChatInviteJIDToID, "\p" );	SetValue( kChatInviteReasonID, "\p" );}///--------------------------------------------------------------------------------------//	ClickItem://		If OK was pressed, send an invite via ChatManager//		//	Changes://		2000-05-23	MH		Created///--------------------------------------------------------------------------------------void	ChatInviteDialog::ClickItem( const short theItem ){	inherited::ClickItem( theItem );		if( theItem == kChatInviteOKBtnID )	{		std::string			str;		MacJLib::JID		toJID;		// get the invitee name		GetValueAsString( kChatInviteJIDToID, str );		toJID = str;		// get the reason		GetValueAsString( kChatInviteReasonID, str );				ChatManager::InviteToChat( toJID, str );		Close( kRunning );	}	else if( theItem == kChatInviteCancelBtnID )	{		Close( kRunning );	}}#pragma mark -///--------------------------------------------------------------------------------------//	SetTargetJID://		//		//	Changes://		2000-05-24	MH		Created///--------------------------------------------------------------------------------------void	ChatInviteDialog::SetTargetJID( const MacJLib::JID &inJID ){	SetValueAsString( kChatInviteJIDToID, inJID.getFull() );		// if there is a recipient specified, focus the reason field, so	// the user can start typing right away	if( inJID.empty() )		SelectItem( kChatInviteJIDToID );	else		SelectItem( kChatInviteReasonID );}