///--------------------------------------------------------------------------------------//	File:		AuthorizeDialog.cpp//	Project:	Jabbernaut////	Purpose:	<default>//	Created:	Thursday, 2000-05-10//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------///- Includes ---------------------------------------------------------------------------#pragma mark === Includes ===#include	"MacZoop.h"#include	"ZDialogItem.h"#include	"AuthorizeDialog.h"#include	"ConnectionManager.h"#include	"PresenceManager.h"#include	"RosterManager.h"#include	"Messages.h"#include	"UniqueID.h"///- Contants ---------------------------------------------------------------------------#pragma mark -#pragma mark === Contants ===enum{	kAuthorizeDialogID	= 1102};enum{	kAuthorizeAuthorizeBtnID = 1,	kAuthorizeRefuseBtnID = 2,	kAuthorizeFromID = 6,	kAuthorizeReasonID = 8,	kAuthorizeAuthorizeAndSubscribeBtnID = 9};#pragma mark -#pragma mark [Class Init]///--------------------------------------------------------------------------------------//	¥ Constructor:///--------------------------------------------------------------------------------------AuthorizeDialog::AuthorizeDialog( ZCommander* aBoss, const short windowID  )	: ZDialog( aBoss, kAuthorizeDialogID ){}///--------------------------------------------------------------------------------------//	¥ Constructor:///--------------------------------------------------------------------------------------AuthorizeDialog::AuthorizeDialog()	: ZDialog( gApplication, kAuthorizeDialogID ){}///--------------------------------------------------------------------------------------//	¥ Destructor:///--------------------------------------------------------------------------------------AuthorizeDialog::~AuthorizeDialog(){}#pragma mark -///--------------------------------------------------------------------------------------//	ClickItem://		Handle clicks in the variouse dialog items//		//	Changes://		2000-05-11	MH		Created///--------------------------------------------------------------------------------------void	AuthorizeDialog::ClickItem( const short theItem ){	inherited::ClickItem( theItem );		if( ( theItem == kAuthorizeAuthorizeBtnID ) ||		( theItem == kAuthorizeAuthorizeAndSubscribeBtnID ) ||		( theItem == kAuthorizeRefuseBtnID ) )	{		// depending on which button was pressed, reject or accept the request		if( theItem == kAuthorizeAuthorizeBtnID )		{			PresenceManager::SendPresence( mRequesterJID, "subscribed", "", "" );		}		else if( theItem == kAuthorizeAuthorizeAndSubscribeBtnID )		{			PresenceManager::SendPresence( mRequesterJID, "subscribed", "", "" );			PresenceManager::SendPresence( mRequesterJID, "subscribe", "", "" );		}		else			PresenceManager::SendPresence( mRequesterJID, "unsubscribed", "", "" );		// close the dialog		Close( kRunning );	}}///--------------------------------------------------------------------------------------//	OnPresence://		OnPresence is called by the PresenceManager//		//	Changes://		2000-05-11	MH		Created///--------------------------------------------------------------------------------------void	AuthorizeDialog::OnPresence( const MacJLib::PresenceMsg &aMsg ){	Str255				pStr;		CopyCToPString( aMsg.getFrom().c_str(), pStr );	SetValue( kAuthorizeFromID, pStr );		CopyCToPString( aMsg.getStatus().c_str(), pStr );	SetValue( kAuthorizeReasonID, pStr );		mRequesterJID = aMsg.getFrom();	if( RosterManager::IsSubscribedTo(mRequesterJID) )		HideItem( kAuthorizeAuthorizeAndSubscribeBtnID );}