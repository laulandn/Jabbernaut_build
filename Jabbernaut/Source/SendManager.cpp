///--------------------------------------------------------------------------------------//	File:		SendManager.cpp//	Project:	Jabbernaut////	Purpose:	SendManager handles all outgoing messages//	Created:	Friday, 2000-05-26//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------///- Includes ---------------------------------------------------------------------------#pragma mark === Includes ===#include	"MacZoop.h"#include	"ConnectionManager.h"#include	"SendManager.h"#include	"SendMsgDialog.h"#include	"MessageMsg.h"///- Static Members ---------------------------------------------------------------------#pragma mark -#pragma mark === Static Members ===//ZSoundPlayer*	SoundManager::msSoundPlayer = NULL;#pragma mark -///--------------------------------------------------------------------------------------//	SendMessage://		Send a message. Why have an extra method for this, and not just use//		ConnectionManager::PostMessage? Well, this way we can easily implement//		an 'auto-away' feature later on if we want to.//		//	Changes://		2000-05-26	MH		Created///--------------------------------------------------------------------------------------void	SendManager::SendMessage( MacJLib::MessageMsgHeader &inMessage ){	ConnectionManager::PostMessage( new MacJLib::MessageMsg( &inMessage ) );}#pragma mark -///--------------------------------------------------------------------------------------//	DoNewMessage://		Open a new SendMsgDialog, using the specified destination address//		//	Changes://		2000-10-02	MH		Created///--------------------------------------------------------------------------------------void	SendManager::DoNewMessage( const MacJLib::JID &to ){	SendMsgDialog	*theSendMsgDialog;		//	// 1. Create the dialog	//		FailNIL( theSendMsgDialog = new SendMsgDialog( NULL ));	try	{		theSendMsgDialog->InitZWindow();		theSendMsgDialog->Place();	}	catch( ZoopError err )	{		ForgetObject( theSendMsgDialog );				throw err;	}		//	// 2. Fill in recipient address	//		theSendMsgDialog->SetTargetJID( to );		//	// 3. Finally, show the dialog	//		theSendMsgDialog->Select();}///--------------------------------------------------------------------------------------//	DoReply://		Open a new message dialog in response to an incoming message//		//	Changes://		2000-10-02	MH		Created///--------------------------------------------------------------------------------------void	SendManager::DoReply( ReceiveMsgDialog *parent,								const MacJLib::JID &to,								const std::string &thread,								const std::string &subject ){	SendMsgDialog	*theSendMsgDialog;		//	// 1. Create the dialog	//		FailNIL( theSendMsgDialog = new SendMsgDialog( parent ));	try	{		theSendMsgDialog->InitZWindow();		theSendMsgDialog->Place();	}	catch( ZoopError err )	{		ForgetObject( theSendMsgDialog );				throw err;	}		//	// 2. Fill in recipient, subject and thread	//		theSendMsgDialog->SetTargetJID( to );	theSendMsgDialog->SetSubject( subject );	theSendMsgDialog->SetThreadID( thread );		//	// 3. Finally, show the dialog	//		theSendMsgDialog->Select();}