///--------------------------------------------------------------------------------------//	File:		CheckKeyModifier.cpp//	Project:	Jabbernaut////	Purpose:	Restricts keypresses in edit fields//	Created:	Sunday, 2000-08-18//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------///- Includes ---------------------------------------------------------------------------#pragma mark === Includes ===#include	"MacZoop.h"#include	"ZDialogItem.h"#include	"CheckKeyModifier.h"///--------------------------------------------------------------------------------------//	Execute://		Restricts keypresses in edit fields//		//	Changes://		2000-08-18	MH		Created///--------------------------------------------------------------------------------------void	CheckKeyModifier::Execute( ZCommander* caller, const long modMessage, UntypedPtr modData ){	ZDialogItem	*di = dynamic_cast<ZDialogItem *>(caller);		hostExec = true;	if( (modMessage == kModifierTyping )		&& (modData != NULL)		&& (di != NULL)		&& (di->GetType() & editText)		)	{		hostExec = CheckKey( (KeyInfo*)modData );		if( !hostExec )			SysBeep( 1 );	}}#pragma mark -///--------------------------------------------------------------------------------------//	CheckKey://		Restricts keypresses to those allowed for jabber usernames//		//	Changes://		2000-08-18	MH		Created///--------------------------------------------------------------------------------------bool	UsernameModifier::CheckKey( KeyInfo *ki ){	Boolean			isControlChar;	char			k = ki->theKey;			// these keys are always considered legal:	isControlChar =	( k == BACKSPACE_KEY 	||	                  k == FORWARD_DELETE_KEY   ||				   	  k == UP_ARROW_KEY		||				      k == DOWN_ARROW_KEY	||				      k == LEFT_ARROW_KEY	||				      k == RIGHT_ARROW_KEY 	||				      k == TAB_KEY		||				      k == RETURN_KEY		||				      k == ENTER_KEY		||				      k == ESCAPE_KEY );		if( isControlChar )		return TRUE;		// Excerpt from the JUD:	// "Each Host can be addressed with individual Nodes, or users. Each user is specific	//  to the Host it is associated with, similar to email. Usernames are restricted to	//  255 characters, and the following ASCII characters are invalid: 		// * Any ASCII character less than 33 (including a space, 32).	if( k < 33 )		return FALSE;		// * Any character in the set [:@<>'"&]	if( ( k == ':' ) ||		( k == '@' ) ||		( k == '<' ) ||		( k == '>' ) ||		( k == '\'' ) ||		( k == '"' ) ||		( k == '&' ) )		return FALSE;		// * Whitespace (\r\n\t)	if( ( k == '\r' ) ||		( k == '\n' ) ||		( k == '\t' ) )		return FALSE;		// * Control characters."End of excerpt.	// Control characters are never entered into the field, but are used to navigate	// through the edit fields, so we let the through anyway.		// Note that the "whitespaces" section should never take action, as those keys	// (return, enter, tab) are handled specially anyway. I include them here for	// completness only.		return TRUE;}