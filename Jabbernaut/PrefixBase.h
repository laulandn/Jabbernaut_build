/* For OpenSSL: */#define B_ENDIAN#ifdef __POWERPC__  #pragma longlong on#endif#define MAC_OS_GUSI_SOURCE#define MONOLITH/* For MacJLib: */#define USE_MACJLIB_NS			1#define USE_MAC_ROUTINES		1#define USE_MAC_ZOOP			1#define USE_AUTOMATIC_UTF8		1#define USE_NATIVE_UTF8			1#define MACJLIB_DEBUG			_DEBUG_/* Target settings for Carbon project- make this the prefix file */#ifndef TARGET_API_MAC_CARBON  #if COMPILE_TO_CLASSIC_TARGET    #define TARGET_API_MAC_CARBON               0  #else    #define TARGET_API_MAC_CARBON               1  #endif#endif#if TARGET_API_MAC_CARBON  #include	"MacHeadersCarbon++"#else  #include	"MacHeaders.h"#endif#if TARGET_API_MAC_CARBON	#include	<MacHelp.h>	// sorry, but changing these compiler macros is just SILLY. Give that back!!!	#undef PRAGMA_ALIGN_SUPPORTED	#define PRAGMA_ALIGN_SUPPORTED  PRAGMA_STRUCT_ALIGN	#undef GENERATINGPOWERPC	#define GENERATINGPOWERPC TARGET_CPU_PPC	#undef GENERATINGCFM	#define GENERATINGCFM TARGET_RT_MAC_CFM	#endif#if COMPILE_TO_CLASSIC_TARGET  #define COMPILE_TO_CARBON_TARGET          0  #undef  TARGET_API_MAC_CARBON  #define TARGET_API_MAC_CARBON             0#else  #define COMPILE_TO_CARBON_TARGET          1#endif/* note: as I write, the new Carbon printing Manager API has been released, but CarbonLib does not contain the implementation of it. Until it does, you can't print using the new API, and compiling will generate link errors. To work around this, we use a special switch here to supress the new carbon printing stuff until we can actually go with it.*/#if COMPILE_TO_CARBON_TARGET  #define CARBON_PRINTING_ACTUALLY_AVAILABLE     0#endif