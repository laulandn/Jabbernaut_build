///--------------------------------------------------------------------------------------//	File:		ZHLRosterItem.h//	Project:	Jabbernaut////	Purpose:	A ZHL (folder) tem that is used to display&store a roster item//	Created:	Thursday, 2000-05-11//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------#pragma once///- Includes ---------------------------------------------------------------------------#include	"ZHierarchicList.h"#include	"PresenceManager.h"#include	"RosterItem.h"///- Class forwards ---------------------------------------------------------------------class	JabberDialog;class	ZHLRosterSubItem;///- Constants --------------------------------------------------------------------------typedef enum{	kMetaGroupNone = 0,	kMetaGroupOnline,	kMetaGroupMyResources,	kMetaGroupOffline,	kMetaGroupPending,	kMetaGroupStalkers,	kMetaGroupAgents} MetaGroup;///- Globals ----------------------------------------------------------------------------///- Prototypes -------------------------------------------------------------------------short ZHLRosterItemCompare( void *itema, void *itemb, const long ref );///- Data Types -------------------------------------------------------------------------///- Class declaration ------------------------------------------------------------------#pragma mark ZHLRosterItemclass ZHLRosterItem : public ZHLFolder{	friend	short ZHLRosterItemCompare( void *itema, void *itemb, const long ref );		//ÊStatic Data	protected:		static MenuHandle			msContextualMenu;	// Static Functions	public:		static void					Init();		static void					Deinit();			//ÊData	protected:		JabberDialog*				mEditDialog;				MacJLib::JID				mJID;		std::string					mName;		MacJLib::GroupList			mGroupList;		bool						mSubscribedTo;		bool						mAskedSubscribeTo;		bool						mSubscribedFrom;		std::string					mActiveResource;		PresenceStatus				mPresenceStatus;		MetaGroup					mMetaGroup;				std::string					mText;				bool						mShowMailIcon;			// Functions	public:		ZHLRosterItem();		~ZHLRosterItem();				// accessors		const MacJLib::JID&			getJID() const;		const std::string&			getName() const;		const MacJLib::GroupList&	getGroupList() const;		const bool					isSubscribedTo() const		{ return mSubscribedTo; }		const bool					isSubscribedFrom() const	{ return mSubscribedFrom; }				MetaGroup					GetMetaGroup() const		{ return mMetaGroup; }		MetaGroup					CalcMetaGroup();		// hooks		void						OnRosterItem( const MacJLib::RosterItem &inItem ); 		void						OnPresence( const MacJLib::PresenceMsg &inPresence ); 		 		// user edit/remove dialogs 		void						DoEditRosterItem(); 		void						DoRemoveRosterItem();				// message icon blinking code		void						StartBlinking();		void						StopBlinking();				// overrides		virtual void				ReceiveMessage( ZComrade* aSender, ZoopMessage theMessage, UntypedPtr msgData );		virtual void				DoTimer( long timerID );	protected:		// overrides		virtual void				DrawCell( Rect& r, ZHLDialogItem *);		virtual void				DoubleClick( short modifiers, ZHLDialogItem *boss );		virtual void				ContextualMenuClick (const Point where);		virtual bool				CustomBackgroundColour(RGBColor &color, ZHLDialogItem *);		virtual bool				CustomForegroundColour(RGBColor &color, ZHLDialogItem *);				// support for the "Edit User" subdialog		virtual void				UpdateEditDialogValues();				virtual	ZHLRosterSubItem*	FindSubItem( const std::string &name );		virtual	ZHLRosterSubItem*	CreateSubItem( const MacJLib::JID &inJID );};