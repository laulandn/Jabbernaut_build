///--------------------------------------------------------------------------------------//	File:		RegisterManager.h//	Project:	Jabbernaut////	Purpose:	<default>//	Created:	Monday, 2000-07-10//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------#pragma once#ifdef TOQ#error Not used in TOQ!!!#endif///- Includes ---------------------------------------------------------------------------#include	"MacJLibUtils.h"#include	"JID.h"#include	<time.h>#include	<map>#include	<set>#include	<string>///- Class forwards ---------------------------------------------------------------------namespace MacJLib{	class	IQErrorMsg;	class	IQResultMsg;	class	RegisterMsg;}using	MacJLib::JID;using	MacJLib::IQErrorMsg;using	MacJLib::IQResultMsg;using	MacJLib::RegisterMsg;///- Constants --------------------------------------------------------------------------const	int kRegisterTimeout	= 30;	// seconds///- Globals ----------------------------------------------------------------------------///- Prototypes -------------------------------------------------------------------------///- Data Types -------------------------------------------------------------------------struct RegisterQuery{	JID		target;	time_t	when;	RegisterQuery() : when(0) {}	RegisterQuery( const JID &t, time_t time) : target(t), when(time) {}};typedef		std::map<std::string, RegisterQuery>	RegisterQueryList;///- Class declaration ------------------------------------------------------------------#pragma mark RegisterManagerclass RegisterManager{	friend class RegistrationDialog;		//ÊStatic Data	protected:		static ZObjectList			*msRegisterDialogs;				static RegisterQueryList	msRegisterQueryIDs;		static RegisterQueryList	msRegisterAttemptIDs;		static RegisterQueryList	msUnregisterAttemptIDs;			// Static Methods	public:		static void					Init();		static void					Deinit();				static void					DispatchIQErrorMsg( const MacJLib::IQErrorMsg &aMsg );		static void					DispatchIQResultMsg( const MacJLib::IQResultMsg &aMsg );		static void					DispatchRegisterMsg( const MacJLib::RegisterMsg &aMsg );				static void					DoRegister( const JID &agentJID );		static void					DoUnregister( const JID &agentJID );		protected:		static RegistrationDialog	*FindRegisterDialog( const JID &inJID );		static RegistrationDialog	*CreateRegisterDialog( const MacJLib::RegisterMsg &aMsg );		static void					RemovedRegisterDialog( RegistrationDialog* dead );};