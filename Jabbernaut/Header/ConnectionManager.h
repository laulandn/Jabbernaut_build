///--------------------------------------------------------------------------------------//	File:		ConnectionManager.h//	Project:	Jabbernaut////	Purpose:	<default>//	Created:	Sundday, 2000-04-16//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------#pragma once///- Includes ---------------------------------------------------------------------------#include	"ZThread.h"#include	"ClientConnection.h"///- Class forwards ---------------------------------------------------------------------namespace MacJLib {	class	BaseMsg;	class	Client;	class	IQErrorMsg;}using	MacJLib::BaseMsg;using	MacJLib::Client;using	MacJLib::IQErrorMsg;class	SSLConnection;///- Constants --------------------------------------------------------------------------///- Globals ----------------------------------------------------------------------------///- Prototypes -------------------------------------------------------------------------///- Data Types -------------------------------------------------------------------------///- Class declaration ------------------------------------------------------------------#pragma mark ConnectionThreadclass	ConnectionThread : public ZThread{	friend class ConnectionManager;		enum	State	{		kConnectionClosed	= 0,		kConnectionDoOpen,		kConnectionOpenening,		kConnectionOpen,		kConnectionDoClose,		kConnectionClosing	};		//ÊData	protected:		Client			*mClient;		SSLConnection	*mLink;		State			mState;		ZoopError		mError;		bool			mUnexpectedDisconnect;	// Functions	public:		ConnectionThread();		virtual ~ConnectionThread();		void			OpenConnection();		void			CloseConnection();				void			PostMessage( BaseMsg *aMsg );	protected:		virtual void	Do();		virtual void	ThreadEntry();				void			HandleUnexpectedDisconnect(ZoopError err);};#pragma mark ConnectionManagerclass ConnectionManager{	friend class	JabberClient;	//ÊStatic Data	protected:		static bool							msLoggedIn;		static ConnectionThread				*msConnectionThread;			// Static Functions	public:		static void			Init();		static void			Deinit();		static void			PostMessage( BaseMsg *aMsg );		static void			DoOpenConnection( bool reLogin = false, long connectTimeoutSecs = 10, long transferTimeoutSecs = 30 );		static void			DoCloseConnection();				static void			OpenConnectionAsync();		static void			CloseConnectionAsync();		static void			Idle();		static bool			IsLoggedIn()		{ return msLoggedIn; }		static bool			IsConnected();		static bool			IsDisconnected();				static Client		*GetClient();			protected:		static void			OnLogin();		static void			OnLogout();		static void			OnRegister();		static void			OnLoginFailed( IQErrorMsg &inError );		static void			OnRegisterFailed( IQErrorMsg &inError );};