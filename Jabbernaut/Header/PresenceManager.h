///--------------------------------------------------------------------------------------//	File:		PresenceManager.h//	Project:	Jabbernaut////	Purpose:	This modules handles incoming presence and dispatches it as needed//	Created:	Tuesday, 2000-05-16//	Authors:	MH - Max Horn <max@quendi.de>////	Copyright:	(c) 2000-2001 Max Horn <max@quendi.de>////	This program is free software; you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation; either version 2 of the License, or//	(at your option) any later version.//	//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	//	You should have received a copy of the GNU General Public License//	along with this program; if not, write to the Free Software//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or visit//	<http://www.gnu.org/copyleft/gpl.html> on the World Wide Web.///--------------------------------------------------------------------------------------#pragma once///- Includes ---------------------------------------------------------------------------#include	"JID.h"///- Class forwards ---------------------------------------------------------------------namespace MacJLib {	class	PresenceMsg;}///- Constants --------------------------------------------------------------------------///- Globals ----------------------------------------------------------------------------///- Prototypes -------------------------------------------------------------------------///- Data Types -------------------------------------------------------------------------typedef enum{	kOnlinePresenceStatus,	kChatPresenceStatus,	kAwayPresenceStatus,	kDNDPresenceStatus,	kNAPresenceStatus,	kOfflinePresenceStatus,	kUnknownPresenceStatus,		kGotMailVirtualStatus,		kLastPresenceStatus} PresenceStatus;///- Class declaration ------------------------------------------------------------------#pragma mark PresenceManagerclass PresenceManager{	//ÊData	protected:		static PresenceStatus	mPresenceStatus;		static std::string		mStatusString;					// Static Functions	public:		static void				DispatchPresenceMsg( const MacJLib::PresenceMsg &inPresence );				static void				BroadcastPresence( PresenceStatus inPresenceStatus, const std::string &status, const MacJLib::JID &to = MacJLib::emptyJID );		static PresenceStatus	GetPresenceStatus()					{return mPresenceStatus;}		static PresenceStatus	GetPresenceStatus( const MacJLib::PresenceMsg &inPresence );		static std::string		GetStatusString()					{return mStatusString;}		static std::string		GetStatusString( const MacJLib::PresenceMsg &inPresence );																		public:		static void				SendPresence( const MacJLib::JID &inJID, const std::string &type = std::string(), const std::string &status = std::string(), const std::string &show = std::string() );};