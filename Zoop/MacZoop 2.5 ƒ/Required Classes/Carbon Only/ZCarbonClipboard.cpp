/****************************************************************************************************			MacZoop - "the framework for the rest of us"	 ****			ZCarbonClipboard.cpp	-- the clipboard object (Carbon version)******			©2000, Graham Cox*****************************************************************************************************/#include	"ZCarbonClipboard.h"#include    "MacZoop.h"/*----------------------------------***  APPENDDATA  ***--------------------------------*//*	add the data to the clipboard with the type supplied----------------------------------------------------------------------------------------*/void	ZCarbonClipboard::AppendData( OSType dataType, Ptr dataPtr, const long dataLen ){    ScrapFlavorFlags    flags;        flags = kScrapFlavorMaskNone;        FailOSStatus( GetCurrentScrap( &theScrap ));    FailOSStatus( PutScrapFlavor( theScrap, (ScrapFlavorType) dataType, flags, dataLen, dataPtr ));}/*-------------------------------------***  CLEAR  ***----------------------------------*//*	make the clipboard empty----------------------------------------------------------------------------------------*/void	ZCarbonClipboard::Clear(){    FailOSStatus( ClearCurrentScrap());    FailOSStatus( GetCurrentScrap( &theScrap ));}/*------------------------------------***  GETDATA  ***---------------------------------*//*	get the data from the clipboard with the type requested----------------------------------------------------------------------------------------*/Handle	ZCarbonClipboard::GetData( OSType dataType ){	Handle		h = NULL;	OSStatus	err;	    FailOSStatus( GetCurrentScrap( &theScrap ));	if ( dataType == Wild_Card )		GetWildcardType( &dataType );		if ( QueryType( dataType ))	{	    // how big does the handle need to be?	    	    long        dSize = GetDataSize( dataType );	    	    FailNIL( h = NewHandle( dSize ));	        	HLock( h );    	err = GetScrapFlavorData( theScrap, (ScrapFlavorType) dataType, &dSize, *h );    	HUnlock( h );    	    	// workaround bug in Carbon scrap mgr - ignore out of memory errors    	    	if ( err != noErr &&    		 err != memFullErr )    	{    		DisposeHandle( h );    		FailOSStatus( err );    	} 	}		return h;}/*----------------------------------***  QUERYTYPE  ***---------------------------------*//*	does the clipboard have this data type?----------------------------------------------------------------------------------------*/Boolean ZCarbonClipboard::QueryType( OSType dataType ){    ScrapFlavorFlags    flags = kScrapFlavorMaskNone;    OSStatus            err;        FailOSStatus( GetCurrentScrap( &theScrap ));    if ( dataType == Wild_Card )        return ( CountTypes() > 0 );    else        err = GetScrapFlavorFlags( theScrap, (ScrapFlavorType) dataType, &flags );        return ( err == noErr );       }/*----------------------------------***  GETDATASIZE  ***-------------------------------*//*	how big is the data of this type?----------------------------------------------------------------------------------------*/long	ZCarbonClipboard::GetDataSize( OSType dataType ){    Size        dataSize;    OSStatus    err;        FailOSStatus( GetCurrentScrap( &theScrap ));    err = GetScrapFlavorSize( theScrap, (ScrapFlavorType) dataType, &dataSize );        if ( err == noErr )        return (long) dataSize;    else        return 0;}/*-------------------------------***  GETWILDCARDTYPE  ***------------------------------*//*	what is the type of the first item of data on the clipboard? Returns TRUE if there isone, else FALSE.----------------------------------------------------------------------------------------*/Boolean	ZCarbonClipboard::GetWildcardType( OSType* aType ){    if ( CountTypes() > 0 )    {        *aType = GetIndType( 1 );        return TRUE;    }    else        return FALSE;        }/*----------------------------------***  COUNTTYPES  ***--------------------------------*//*	how many different types of data are there on the clipboard?----------------------------------------------------------------------------------------*/short	ZCarbonClipboard::CountTypes(){    OSStatus    err;    UInt32      scrapCount;        FailOSStatus( GetCurrentScrap( &theScrap ));    err = GetScrapFlavorCount( theScrap, &scrapCount );        return ( err == noErr )? scrapCount : 0;}/*----------------------------------***  GETINDTYPE  ***--------------------------------*//*return the type of clipboard data indexed from 1 to the value returned by CountTypes.	----------------------------------------------------------------------------------------*/OSType	ZCarbonClipboard::GetIndType( const short index ){    UInt32              siCount;    ScrapFlavorInfo*    si;    OSStatus            err;    OSType              type = kUnknownType;        siCount = CountTypes();        if ( siCount > 0 )    {        FailNIL( si = (ScrapFlavorInfo*) NewPtr( siCount * sizeof( ScrapFlavorInfo )));            err = GetScrapFlavorInfoList( theScrap, &siCount, si );            if ( err == noErr )            type = (OSType) si[ index - 1 ].flavorType;                    DisposePtr((Ptr) si );    }        return type;}