/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZChore.h			-- simple chore task object******			©2000, Graham Cox*****************************************************************************************************/#pragma once#ifndef __ZCHORE__#define	__ZCHORE__#include	"ZComrade.h"class	ZChore	: public ZComrade{protected:	Boolean		repTask;	public:	ZChore( Boolean repeat = FALSE ) : ZComrade() { repTask = repeat; };	virtual ~ZChore() {};		virtual void	Do() {};		inline Boolean	IsRepeatTask() { return repTask; };};/*A chore is a task that the application executes for you. It is useful for simplehousekeeping tasks that need to be done once per event loop. Chores are executed atthe end of each event loop.The action for the chore should be placed in the Do() method.Typically, chores are one-shot. The application will execute them once then deletethem. If you pass TRUE in the constructor <repeat> parameter, the task will not beremoved from the chore list and will execute every loop.A concrete example of a chore is ZWindowCloseChore, which is created when a window wantsitself to be deleted. The chore then does the deletion, which usefully defers the actualdestruction of the window to a safer time.*/#endif