/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			GrafMacros.h		-- grafPort macros for easing Carbon transition****			© 2000, Graham Cox*****************************************************************************************************/#pragma once#ifndef	__GRAFMACROS__#define __GRAFMACROS__/*By using these macros where appropriate, you'll make it far easier to port your code toCarbon. Under carbon, these Macros will enwrap all the new accessor functions so that thesame source code will compile correctly under Carbon or Classic Mac OS.NOTE:All Macros returning Rectangles or other structures return the ADDRESS. This is to match theconvention that Carbon adopts.Macros for accessing regions that belong to ports and windows, as per Carbon, copy the relevantregion into one you supply.*/#if COMPILE_TO_CARBON_TARGET// this buffer is used to provide "ballast" for functions that require an address to some storage.static char	gParamBuf[256];// QD Globals:#define		CURRENTPORT					( GetQDGlobalsThePort())#define		CURRENTPORTPIXMAP			( GetPortBitMapForCopyBits( GetQDGlobalsThePort()))#define		CURRENTPORTPORTRECT			( GetPortBounds( GetQDGlobalsThePort(), (Rect*) gParamBuf ))#define		SETQDRANDSEED( s )			( SetQDGlobalsRandomSeed( s ))#define		QDARROWCURSOR				( GetQDGlobalsArrow((Cursor*) gParamBuf ))#define		QDGRAYPATTERN				( GetQDGlobalsGray((Pattern*) gParamBuf ))#define     QDBLACKPATTERN              ( GetQDGlobalsBlack((Pattern*) gParamBuf))#define     QDLIGHTGRAYPATTERN          ( GetQDGlobalsLightGray((Pattern*) gParamBuf))#define     QDDARKGRAYPATTERN           ( GetQDGlobalsDarkGray((Pattern*) gParamBuf))#define     QDWHITEPATTERN              ( GetQDGlobalsWhite((Pattern*) gParamBuf))// current port region getters and setters:#define		GETCURRENTPORTVISRGN( r )	( GetPortVisibleRegion(GetQDGlobalsThePort(), r ))#define		GETCURRENTPORTCLIPRGN( r )	GetClip(r)#define		SETCURRENTPORTVISRGN( r )	( SetPortVisibleRegion(GetQDGlobalsThePort(), r ))#define		SETCURRENTPORTCLIPRGN( r )	SetClip(r)// Windows:#define		WINDOWPIXMAP( w )			( GetPortPixMap( GetWindowPort(w)))#define		WINDOWPORTRECT( w )			( GetWindowPortBounds( w, (Rect*) gParamBuf ))#define		WINDOWGRAFPTR( w )			( GetWindowPort( w ))// window region getters and setters:#define		GETWINDOWVISRGN( w, r )		( GetPortVisibleRegion( GetWindowPort(w), r ))#define		GETWINDOWCLIPRGN( w, r )	( GetPortClipRegion( GetWindowPort(w), r ))#define		SETWINDOWVISRGN( w, r )		( SetPortVisibleRegion( GetWindowPort(w), r ))#define		SETWINDOWCLIPRGN( w, r )	( SetPortClipRegion( GetWindowPort(w), r ))// windowpeek:#define		WINDOWKIND( w )				( GetWindowKind( w ))#define		WINDOWVISIBLE( w )			( MacIsWindowVisible( w ))#define		WINDOWGOAWAYFLAG( w )		( GetWindowGoAwayFlag( w ))#define		WINDOWHILITED( w )			( IsWindowHilited( w ))#define		NEXTWINDOWINLIST( w )		( MacGetNextWindow( w ))// Regions:#define		REGIONBOUNDINGBOX( r )		( GetRegionBounds( r, (Rect*) gParamBuf ))#define		GETWINDOWSTRUCTURERGN( w, r )	(GetWindowStructureRgn( w, r ))#define		GETWINDOWCONTENTRGN( w, r )		(GetWindowContentRgn( w, r ))#define		GETWINDOWUPDATERGN( w, r )		(GetWindowUpdateRgn( w, r ))// GrafPorts:#define		PORTPIXMAP( p )				( GetPortBitMapForCopyBits( p ))#define		PORTPORTRECT( p )			( GetPortBounds( p, (Rect*) gParamBuf ))#define		PORTPIXMAPHANDLE( p )		( GetPortPixMap( p ))#define		PIXMAPROWBYTES( pp )		( GetPixRowBytes( pp ))// region getters and setters:#define		GETPORTVISRGN( p, r )		( GetPortVisibleRegion( p, r ))#define		GETPORTCLIPRGN( p, r )		( GetPortClipRegion( p, r ))#define		SETPORTVISRGN( p, r )		( SetPortVisibleRegion( p, r ))#define		SETPORTCLIPRGN( p, r )		( SetPortClipRegion( p, r ))// grafPort field access (READ ONLY)#define		PORTTEXTFONT( p )			( GetPortTextFont( p ))#define		PORTTEXTFACE( p )			( GetPortTextFace( p ))#define		PORTTEXTSIZE( p )			( GetPortTextSize( p ))#define		PORTTEXTMODE( p )			( GetPortTextMode( p ))#define		PORTPENLOCATION( p )		( GetPortPenLocation( p, (Point*) gParamBuf ))#define		PORTSPACEEXTRA( p )			( GetPortSpExtra( p ))#define		PORTPENSIZE( p )			( GetPortPenSize( p, (Point*) gParamBuf ))#define		PORTPENMODE( p )			( GetPortPenMode( p ))#define     PORTPENPIXPAT( p )          ( GetPortPenPixPat( p, NULL ))#define     PORTBACKPIXPAT( p )         ( GetPortBackPixPat( p, NULL ))// dialog stuff:#define		DIALOGGRAFPTR( d )			( GetDialogPort((DialogPtr) d ))#define		DIALOGFROMWINDOW( w )		( GetDialogFromWindow((WindowPtr) w ))#define		DIALOGTEXTEDITRECORD( d )	( GetDialogTextEditHandle((DialogPtr) d ))#define		DIALOGWINDOW( d )			( GetDialogWindow((DialogPtr) d ))// SetPort:#define		SETPORTTOWINDOW( w )		( SetPortWindowPort((WindowPtr) w ))#define		SETPORTTODIALOG( d )		( SetPortDialogPort((DialogPtr) d ))// menu stuff:#define		GETMENUIDFROMHANDLE( m )	( GetMenuID( m ))#define		ENABLEMENUITEM( m, i )		( EnableMenuItem( m, i ))#define		DISABLEMENUITEM( m, i )		( DisableMenuItem( m, i ))#define		COUNTMENUITEMS( m )			( CountMenuItems( m ))#define		CHECKMENUITEM( m, i, f )	( CheckMenuItem( m, i, f ))// control stuff:#define		GETCONTROLRECT( c, r )		( GetControlBounds( c, r ))#define		SETCONTROLRECT( c, r )		( SetControlBounds( c, r ))#else// QD Globals:#define		CURRENTPORT					(qd.thePort)#define		CURRENTPORTPIXMAP			((const BitMap*) &CURRENTPORT->portBits )#define		CURRENTPORTPORTRECT			(&CURRENTPORT->portRect )#define		CURRENTPORTROWBYTES			(CURRENTPORT->portBits.rowBytes)#define		QDGLOBALS					(qd)#define		SETQDRANDSEED( s )			( qd.randSeed = ( s ))#define		QDARROWCURSOR				( &qd.arrow )#define		QDGRAYPATTERN				( &qd.gray )#define     QDBLACKPATTERN              ( &qd.black )#define     QDLIGHTGRAYPATTERN          ( &qd.ltGray )#define     QDDARKGRAYPATTERN           ( &qd.dkGray )#define     QDWHITEPATTERN              ( &qd.white )// current port region getters and setters:#define		GETCURRENTPORTVISRGN( r )	CopyRgn( CURRENTPORT->visRgn, (r))#define		GETCURRENTPORTCLIPRGN( r )	GetClip(r)#define		SETCURRENTPORTVISRGN( r )	CopyRgn((r), CURRENTPORT->visRgn )#define		SETCURRENTPORTCLIPRGN( r )	SetClip(r)// Windows:#define		WINDOWPIXMAP( w )			( GetWindowPort(w)->portPixMap )#define		WINDOWPORTRECT( w )			( &GetWindowPort(w)->portRect )#define		WINDOWGRAFPTR( w )			( GetWindowPort( w ))// window region getters and setters:#define		GETWINDOWVISRGN( w, r )		CopyRgn(GetWindowPort(w)->visRgn, (r))#define		GETWINDOWCLIPRGN( w, r )	CopyRgn(GetWindowPort(w)->clipRgn, (r))#define		SETWINDOWVISRGN( w, r )		CopyRgn((r), GetWindowPort(w)->visRgn )#define		SETWINDOWCLIPRGN( w, r )	CopyRgn((r), GetWindowPort(w)->clipRgn )// WindowPeek:#define		WINDOWPEEK( w )				((WindowPeek) w )#define		WINDOWKIND( w )				(GetWindowKind( w ))#define		WINDOWVISIBLE( w )			(MacIsWindowVisible( w ))#define		WINDOWGOAWAYFLAG( w )		(GetWindowGoAwayFlag( w ))#define		WINDOWHILITED( w )			(IsWindowHilited( w ))#define		NEXTWINDOWINLIST( w )		(MacGetNextWindow( w ))// Regions:#define		REGIONBOUNDINGBOX( r )		(&(*r)->rgnBBox)#define		GETWINDOWSTRUCTURERGN( w, r )	(GetWindowStructureRgn( w, r ))#define		GETWINDOWCONTENTRGN( w, r )		(GetWindowContentRgn( w, r ))#define		GETWINDOWUPDATERGN( w, r )		(GetWindowUpdateRgn( w, r ))// GrafPorts:#define		PORTPIXMAP( p )				((const BitMap*) &((GrafPtr) p)->portBits )#define		PORTPORTRECT( p )			(&(p)->portRect )#define		PORTPIXMAPHANDLE( p )		((p)->portPixMap )#define		PIXMAPROWBYTES( pp )		((*pp)->rowBytes & 0x7FFF)// region getters and setters:#define		GETPORTVISRGN( p, r )		CopyRgn((p)->visRgn, (r))#define		GETPORTCLIPRGN( p, r )		CopyRgn((p)->clipRgn, (r))#define		SETPORTVISRGN( p, r )		CopyRgn((r), (p)->visRgn )#define		SETPORTCLIPRGN( p, r )		CopyRgn((r), (p)->clipRgn )// grafPort field access (READ ONLY)#define		PORTTEXTFONT( p )			((p)->txFont)#define		PORTTEXTFACE( p )			((p)->txFace)#define		PORTTEXTSIZE( p )			((p)->txSize)#define		PORTTEXTMODE( p )			((p)->txMode)#define		PORTPENLOCATION( p )		( &(p)->pnLoc)#define		PORTSPACEEXTRA( p )			((p)->spExtra)#define		PORTPENSIZE( p )			( &(p)->pnSize)#define		PORTPENPATTERN( p )			( &(p)->pnPat)#define		PORTPENMODE( p )			((p)->pnMode )#define     PORTPENPIXPAT( p )          ((p)->pnPixPat )#define     PORTBACKPIXPAT( p )         ((p)->bkPixPat )// dialog stuff:#define		DIALOGGRAFPTR( d )			(GetWindowPort( GetDialogWindow( d )))#define		DIALOGFROMWINDOW( w )		((DialogPtr) w )#define		DIALOGPEEK( d )				((DialogPeek) d )#define		DIALOGTEXTEDITRECORD( d )	( DIALOGPEEK( d )->textH )#define		DIALOGWINDOW( d )			( GetDialogWindow((DialogPtr) d ))// SetPort:#define		SETPORTTOWINDOW( w )		(SetPortWindowPort((WindowPtr) w ))#define		SETPORTTODIALOG( d )		(SetPortWindowPort( GetDialogWindow((DialogPtr) d )))// menu stuff:#define		GETMENUIDFROMHANDLE( m )	((*m)->menuID)#define		ENABLEMENUITEM( m, i )		( EnableItem( m, i ))#define		DISABLEMENUITEM( m, i )		( DisableItem( m, i ))#define		COUNTMENUITEMS( m )			( CountMItems( m ))#define		CHECKMENUITEM( m, i, f )	( CheckItem( m, i, f ))// control stuff:#define		GETCONTROLRECT( c, r )		( *r = (*c)->contrlRect )#define		SETCONTROLRECT( c, r )		((*c)->contrlRect = *r)#endif  // opaque structs#endif