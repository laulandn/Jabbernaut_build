/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			MZListTypes.h			-- types used by lists in MacZoop**			****			©2000, Graham Cox****************************************************************************************************/#pragma once#ifndef __MZLISTTYPES__#define	__MZLISTTYPES__// lists can be constructed from resource templates. This is the template used by MLIst// and older ZDialog based code. It can be used to create an array browser also for// backward compatibility, but the 'ZARB' resource is better suited and should be used for// newer code.#if PRAGMA_ALIGN_SUPPORTED#pragma options align=mac68k#endiftypedef struct{	short		rows;				// number of rows	short		columns;			// number of columns	short		stringsListID;		// ID number of STR# resource to fill list with	short		procID;				// LDEF proc ID (0 for standard)	Boolean		hasVertScroll : 1;	// TRUE if has vertical scrollbar	Boolean		hasHorizScroll : 1;	// TRUE if has horizontal scrollbar	Boolean		hasGrowBox : 1;		// TRUE if has grow box	Boolean		visible : 1;		// TRUE if initially visible	Boolean		keyboardNav : 1;	// TRUE if can have the keyboard focus	Boolean		whiteBk : 1;		// TRUE if white background in colour window	Boolean		disableType : 1;	// TRUE to DISABLE type-selection	Boolean		spare : 1;			// reserved for future use	long		refCon;				// reference constant	short		fontSize;			// size of font to use (uses window font if 0).	Str63		fontName;			// which font to use.	short		cellV, cellH;		// cell height and width, 0 if default}ListTemplate, *ListTemplatePtr, **ListTemplateHdl;// array browser can be instantiated based on a new template, 'ZARB', which is// similar to LIST but covers the functionality of ZArrayBrowser better.typedef struct{	Rect			frame;			// frame rectangle	short			numColumns;		// number of columns	short			columnWidth;	// width of columns initially (0 = default)	unsigned short	flags;			// behaviour flags	short			reserved;		// set to 0	Boolean			makeScroller;	// TRUE if built into scroller view	Boolean			hasHScroll;		// horizontal scrollbar	Boolean			hasVScroll;		// vertical scrollbar	Boolean			userFlag;		// set to 0		OSType			dataType;		// type of browser to make (see below)	short			dataResID;		// res ID of auxiliary data	short			initStyle;		// browser style, or if 0...	short			rowExtraHeight;	// extra height to add to row	short			columnInset;	// inset for each column	short			borderWidth;	// borderWidth	Boolean			drawColBorder;	// draw the column border}BrowserTemplate, *BrowserTemplatePtr, **BrowserTemplateHdl;// note that font info, etc. is set up using the standard ictb or dftb resourcesenum{	kListTemplateResType		 	= 'LIST',	kArrayBrowserTemplateResType 	= 'ZARB',	kArrayBrowserColoursResType 	= 'ZBCT'};// data types currently supported:enum{	kBrowserPStringType		= 'STR#',	// dataResID indicates STR# to use	kBrowserIconType		= 'ICLB'	// dataResID indicates ICLB to use};// array browser colours can be set from 'ZBCT' resource, which is just a CLUT with four// entries, thus:enum{	kArrayBrowserBackColour	= 0,	kArrayBrowserForeColour,	kArrayBrowserBorderColour,	kArrayBrowserAlternateColour};	#if PRAGMA_ALIGN_SUPPORTED#pragma options align=reset#endif#endif