/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZGWorldWindow.h 	-- a window with an offscreen GWorld. This can open PICT*									images into an offscreen port and correctly uses the*									palette manager, etc******			© 1996, Graham Cox*****************************************************************************************************/#pragma once#ifndef __ZGWORLDWINDOW__#define __ZGWORLDWINDOW__#ifndef __ZPICTWINDOW__#include	"ZPictWindow.h"#endifclass	ZGWorld;// set up streaming stuff:DEFINECLASSID( ZGWorldWindow, 'zgww' );class	ZGWorldWindow : public ZPictWindow{protected:		ZGWorld*	itsOffscreen;		// the GWorld	short		scale;				// display zooming scale	Boolean		fatBitsGrid;		// TRUE if zoomed images are overlaid with fatbits gridpublic:	ZGWorldWindow( ZCommander* aBoss, const short windID );	ZGWorldWindow();	~ZGWorldWindow();	virtual void	DrawContent();	virtual void	OpenFile( const OSType fType, Boolean isStationery = FALSE );	virtual void	SaveFile();		virtual void	HandleCommand( const long theCommand );	virtual void	UpdateMenus();		virtual Boolean	AcceptsFlavour( const OSType aFlavour );	virtual void	Drop( const OSType flavour, const Ptr data, const long dataSize, const DragReference theDrag = NULL );		virtual void	DoCopy();	virtual void	DoPaste();		inline	ZGWorld*	GetGWorld() { return itsOffscreen; };	virtual	void		SetGWorld( ZGWorld* aGW );		virtual void	MakePaletteForWindow();		virtual void	SetScale( const short aScale = 100 );	inline	short	GetScale() { return scale; };		virtual void	ZoomToPoint( const Point clickPt, Boolean isZoomOut = FALSE );	virtual void	ZoomToCentre( Boolean isZoomOut = FALSE );		virtual void	GetName( Str255 name );	virtual void	SetTitle( Str255 name );		virtual void	SetPictureFromResource( const short pictResID );	// new 2.0.1 convenience interface, computes bounds, etc:	virtual void	InstallImage( PicHandle aPic );	virtual void	InstallImage( const short picResourceID );	virtual void	InstallImage( ZGWorld* aGWorld );// streaming:	virtual void	WriteToStream( ZStream* aStream );	virtual void	ReadFromStream( ZStream* aStream );	protected:		virtual void	MakeGWorld();	virtual void	CalcSourceRect( Rect* aSrcRect );	virtual void	CalcBoundsRect( Rect* aBoundsRect );	virtual void	CalcFatBitsGridMask( const Rect& destRect, RgnHandle maskRgn );};// commands we define:enum{	kCmdFlipHorizontal = 188,	kCmdFlipVertical,	kCmdInvert,	kCmdZoomIn,	kCmdZoomOut,	kCmdShowHideGrid};#define		kMsgGWorldChanged	'gwrx'#endif