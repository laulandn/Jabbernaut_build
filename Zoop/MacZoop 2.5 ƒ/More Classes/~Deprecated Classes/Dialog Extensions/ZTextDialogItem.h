/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZTextDialogItem.h			-- dialog item object that handles a scrolling text box**			****			© 1999, Graham Cox****************************************************************************************************/#pragma once#ifndef __ZTEXTDIALOGITEM__#define	__ZTEXTDIALOGITEM__#include	"ZDialogItem.h"DEFINECLASSID( ZTextDialogItem, 'ztxd' );class	ZTextDialogItem	: public ZDialogItem{protected:	Boolean			isEditable;			// TRUE if editable text	Boolean			isSelectable;		// TRUE if selectable text	short			resID;				// res ID of TEXT/styl resource	short			lineHeight;			// height of a line	short			pageHeight;			// height of a "page"	Boolean			rtInProgress;public:		ZTextDialogItem( ZDialog* aDialog, const short item );	ZTextDialogItem();	~ZTextDialogItem();// overrides:		virtual void		InitItem( const short paramCount, const long params[] );	virtual void		DrawItem();	virtual void		Click( const Point where, const short modifiers );	virtual void		AdjustCursor( const Point where, const short modifiers );	virtual void		Type( const char theKey, const short modifiers );	virtual void		Idle();	virtual void        Activate();	virtual void        Deactivate();		virtual void		Enable( Boolean useHistory );	virtual void		Disable( Boolean useHistory );		virtual void		DoCut();	virtual void		DoCopy();	virtual void		DoPaste();	virtual void		DoClear();	virtual void		DoSelectAll();	virtual Boolean		CanPasteType();	virtual void		UpdateMenus();	virtual void		HandleCommand( const long theCmd );	virtual void		HandleCommand( const short menuID, const short itemID );		virtual void		SetValue( const Str255 strVal );	virtual void		SetBounds( Rect* newBounds );// original methods:		virtual void		SetText( Handle textH, Handle styleH = NULL );	virtual void		GetText( Handle textH, Handle styleH = NULL );	virtual void		Scroll( short delta );	virtual void		ScrollTo( const short vPosition );	virtual void		DoScroll( short partCode );		virtual void		GetContentRect( Rect* r );	virtual void		RecalText( Boolean scrollToCaret = FALSE );		inline	TEHandle	GetTextEditHandle() { return pwMirror; };		virtual void		TextEditClickLoop();protected:	virtual void		MakeMacTEAndScroll();	virtual void		PreloadText();	virtual Boolean		PtInScrollbar( const Point mouse );	virtual void		DrawDisabledBar();};#endif