/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZScrollerDialogItem.h			-- dialog item object that handles generic scrolling*			*			based on an idea by Koen van der Drift***			© 1999, Graham Cox****************************************************************************************************/#pragma once#ifndef __ZSCROLLERDIALOGITEM__#define	__ZSCROLLERDIALOGITEM__#include	"ZDialogItem.h"DEFINECLASSID( ZScrollerDialogItem, 'zscd' );class	ZScrollerDialogItem	: public ZDialogItem{protected:	ControlHandle		theHBar;		// horizontal scroll bar	ControlHandle		theVBar;		// vertical scrollbar	Rect				scrollBounds;	// rect of area scrolled "content"	short				hScale;			// pixels shifted per unit horizontally	short				vScale;			// pixels shifted per until vertically	short				cInitValue;		// used for live scrolling support	short				dragMask;		// modifiers mask for drag-scroll	Boolean				hasHBar;		// true if has horizontal bar	Boolean				hasVBar;		// true if has vertical bar	Boolean				hasGrowBox;		// true if has grow box	public:	ZScrollerDialogItem( ZDialog* aDialog, const short item );	ZScrollerDialogItem();// must override to do something useful:	virtual void	DrawContent() {};	virtual void	ClickContent( const Point mouse, const short modifiers ) {};// general overrides:	virtual void	InitItem( const short paramCount, const long params[] );	virtual void	DrawItem();	virtual void	Click( const Point mouse, const short modifiers );	virtual void	ClickScroll( const Point mouse );	virtual void	AdjustCursor( const Point mouse, const short modifiers );	virtual void	Enable( Boolean useHistory );	virtual void	Disable( Boolean useHistory );	virtual void	HideScrollbars();	virtual void	MoveScrollbars();	virtual void	SetBounds( Rect* newBounds );		virtual void    Activate();	virtual void    Deactivate();	virtual void	Hide();	virtual void	Show();	// unique methods:	virtual void	SetScrollRect( const Rect& aBounds );	virtual void	SetScrollRect( short top, short left, short bottom, short right );	virtual void	SetScrollRect( Point tl, Point br );	virtual void	GetScrollRect( Rect* aBounds ) { *aBounds = scrollBounds; };	virtual void	SetOriginToScroll();	virtual void	GetContentRect( Rect* r );	virtual void	GetPosition( short* hPosition, short *vPosition );	virtual void	SetScrollAmount( const short hAmount, const short vAmount )	{ hScale = hAmount; vScale = vAmount; };	virtual void	SetDragScrollModifiers( const short modMask ) { dragMask = modMask; };	protected:	virtual void	Scroll( const short dH, const short dV );	virtual void	ScrollTo( const short hPosition, const short vPosition );	virtual void	MakeScrollbars();	virtual void	DrawDisabledBars();	virtual void	CalculateControlParams();public:	virtual void	ScrollHandler( const ControlHandle aCtl, const short partCode );};#endif