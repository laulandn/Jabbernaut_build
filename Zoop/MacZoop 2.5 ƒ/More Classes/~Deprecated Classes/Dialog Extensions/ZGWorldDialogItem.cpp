/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZGWorldDialogItem.cpp			-- dialog item object that displays scrolling GWorld***			© 1999, Graham Cox****************************************************************************************************/#include	"ZGWorldDialogItem.h"#include	"MacZoop.h"#include	"ZGWorld.h"#include	"ZDialog.h"CLASSCONSTRUCTOR( ZGWorldDialogItem );/*--------------------------------***  CONSTRUCTOR  ***---------------------------------*/ZGWorldDialogItem::ZGWorldDialogItem( ZDialog* aDialog, const short item )	: ZScrollerDialogItem( aDialog, item ){	classID = CLASS_ZGWorldDialogItem;	itsOffscreen = NULL;}/*--------------------------------***  CONSTRUCTOR  ***---------------------------------*/ZGWorldDialogItem::ZGWorldDialogItem()	: ZScrollerDialogItem(){	classID = CLASS_ZGWorldDialogItem;	itsOffscreen = NULL;}/*---------------------------------***  DESTRUCTOR  ***---------------------------------*/ZGWorldDialogItem::~ZGWorldDialogItem(){	if ( itsOffscreen )		ForgetObject( itsOffscreen );}/*----------------------------------***  INITITEM  ***----------------------------------*//*	initialise the item from parameter list----------------------------------------------------------------------------------------*/void	ZGWorldDialogItem::InitItem( const short paramCount, const long params[] ){	// params are as follows:	// param 1 - flags, bit 0 = v bar, 1 = hbar, 2 = growbox (not yet implemented)	// param 2 - ID of PICT resource to display	// param 3 - width of image (if no PICT)	// param 4 - height of image (if no PICT)	// param 5 - depth of image ( 0 = same as screen )	// param 6 - CLUT ID ( 0 = system palette )		// if we have a PICT, we set the scrollbounds from it, so try loading that first		if ( paramCount > 1 )	{		short pictID = params[1];				if ( pictID != 0 )			FailNIL( itsOffscreen = new ZGWorld( pictID ));		else		{			// no pict ID, so make an empty GWorld based on the remaining params						Rect		r;			CTabHandle	cTable = NULL;						SetRect( &r, 0, 0, params[2], params[3] );						if ( params[5] != 0 )				cTable = GetCTable( params[5] );						FailNIL( itsOffscreen = new ZGWorld( r, params[4], cTable ));						if ( cTable )				DisposeCTable( cTable );		}	}		// initialise underlying scroller item:		ZScrollerDialogItem::InitItem( 1, params );		if ( itsOffscreen )		itsOffscreen->GetSize( &scrollBounds );	else		SetRect( &scrollBounds, 0, 0, params[2], params[3] );			CalculateControlParams();}/*--------------------------------***  DRAWCONTENT  ***---------------------------------*//*	blit the GWorld to the window----------------------------------------------------------------------------------------*/void	ZGWorldDialogItem::DrawContent(){	if ( itsOffscreen )	{			const BitMap*		dbm;				dbm = PORTPIXMAP( DIALOGGRAFPTR( GetMacDialog()));				SetPortBlackWhite();		itsOffscreen->CopyOut( dbm, NULL, &scrollBounds );		}}