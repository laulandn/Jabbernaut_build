/****************************************************************************************************			ObjectMacZapp		-- a standard Mac OOP application template****			ZLMListWindow.h		-- a window that can display a List Manager list******			© 1996, Graham Cox*****************************************************************************************************/#pragma once#ifndef __ZLMLISTWINDOW__#define	__ZLMLISTWINDOW__#include	"ZWindow.h"#include	"MList.h"#include	<Lists.h>// note: this class does not inherit from ZScroller because the list manager handles scrolling// itself.DEFINECLASSID( ZLMListWindow, 'zlst' );class	ZLMListWindow	: public ZWindow, public MList{protected:	short			itsRows, itsCols;	Point			cellSize;	Boolean			inSizeOp;	Boolean			hasVBar, hasHBar;	Rect			bounds;	short			headerHeight;		public:	ZLMListWindow(ZCommander* aBoss, short windID, short rows = 0, short cols = 1 );	virtual ~ZLMListWindow();// window overrides	virtual void	InitZWindow();		virtual void	DrawContent();	virtual void	Click( const Point mouse, const short modifiers );	virtual void	Activate();	virtual void	Deactivate();	virtual void	SetSize( const short width, const short height );	virtual void	Zoom( const short partCode );	virtual void	GetContentRect( Rect* contents );	virtual void	GetIdealWindowZoomSize( Rect* zr );	virtual void	AdjustCursor( const Point mouse, const short modifiers );	virtual void	Type( const char theKey, const short modifiers );	// drawing the list cells		virtual void	MLDraw1Cell( Rect* area, Cell aCell, Boolean hilited );		virtual void	DrawHeader();	inline	void	SetHeaderHeight( short aHeight ) { headerHeight = aHeight; };// setting initial parameters for special lists		virtual void	SetCellSize( short aWidth = 0, short aHeight = 0 );	virtual void	SetLMScrollUsage( Boolean aVBar, Boolean aHBar );	virtual void	GetBounds( Rect* aBounds) { *aBounds = bounds; };	virtual void	ReportFields();	protected:		virtual void	DrawCellLines( Rect* area, Cell aCell );	virtual void	CalcBounds();	};#define		kScrollBarWidth		15// some controls you can set to modify the behaviour of the standard class//#define		_NEVER_USE_CUSTOM_LDEF#define		_DRAW_LINES_BETWEEN_CELLS/*This class handles a window that displays a List Manager list. The list is entirely managedby the Macintosh List Manager, and thus has all of the inherent limitations of that manager.By default, this class implements a 1 column list that occupies the full size of the window.Since the List Manager deals with its own scrollbars, this is not derived from ZScroller butfrom the more basic class ZWindow. This implements a custom drawing callback that allows youto create custom lists without having to write a custom LDEF proc. Effectively, a fake LDEFis created that calls this object back to implement the drawing of the list cells. Thus youcan create any custom list by subclassing this object.*/#endif