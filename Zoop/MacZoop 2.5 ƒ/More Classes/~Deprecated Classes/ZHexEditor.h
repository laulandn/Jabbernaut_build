/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZHexEditor.h			-- a scroller that displats an editable hex dump******			© 1996, Graham Cox*****************************************************************************************************/#pragma once#ifndef __ZHEXEDITOR__#define	__ZHEXEDITOR__#include	"ZScroller.h"// Hex editor compilation options:// set this to the number of bytes per line to dump. Usually 16; 8 also common. Other sizes// should work but not exhaustively tested.#define		BYTES_PER_LINE				16// if you want a colourised dump, set this to 1:// n.b. display is noticeably slower in colour.#define		HD_USE_COLOUR				1// to display the absolute address rather than a relative one, set this to 1:#define		SHOW_ABSOLUTE_ADDRESS		0// to display only 24 bits of address, set this to 1. Otherwise 32 bits are shown#define		USE_24_BIT_ADDRESS			1// set gap between end of dump area and start of ascii area:#define		ASCII_OFFSET				20// group into columns of this many bytes (usually 4 for 16 bytes per line or// 2 for 8 bytes/line ) set equal to BYTES_PER_LINE for no grouping.#define		COLUMN_GROUP_SIZE			4// caret is normally 1 or 2 pixels wide- set your preference here:#define		CARET_WIDTH					1// if you want a "total bytes" placard on the left of the horizontal scrollbar, define this:#define		SIZE_PLACARD				1#define		PLACARD_WIDTH				80// general class stuff:// set up streaming stuff:DEFINECLASSID( ZHexEditor, 'zhxe' );// class:class	ZHexEditor	: public ZScroller{protected:	Ptr				dumpArea;	long			dumpLength;	Handle			tempStore;	long			selStart, selEnd;	RgnHandle		selectionRgn;	long			maxDisplayLength;	short			hdStart, hdEnd;	short			lineHeight, ascent, emSpace;	Boolean			edited;	Boolean			caretPhase;	Boolean			nibPhase;	Boolean			halfOff;	public:	ZHexEditor( ZCommander* aBoss, const short windID );	ZHexEditor();	virtual ~ZHexEditor();// window + scroller overrides:		virtual void	InitZWindow();	virtual void	Draw() { ZScroller::Draw(); DrawPlacard(); };	virtual void	DrawContent();	virtual void	ClickContent( const Point mouse, const short modifiers );	virtual void	Type( const char theKey, const short modifiers );	virtual void	AdjustCursor( const Point mouse, const short modifiers );	virtual void	Activate();	virtual void	Deactivate();	virtual void	Idle();	virtual Boolean	ClickInSamePlace( const Point a, const Point b );// standard commands:		virtual void	UpdateMenus();	virtual void	DoSelectAll();	virtual void	DoCopy();	virtual void	DoClear();	virtual void	DoPaste();	virtual Boolean	CanPasteType();	virtual void	HandleCommand( const long aCmd );	// comrade stuff:	virtual void	ReceiveMessage( ZComrade* aSender, ZoopMessage aMsg, UntypedPtr msgData ); // file I/O		virtual void	OpenFile( const OSType fType, Boolean isStationery = FALSE );	virtual void	SaveFile();// setting content of the dump and selection in it:		virtual void	SetDumpMemory( Ptr dumpThis, long dumpBytes );	virtual Boolean	DumpChanged();	virtual void	GetDumpMemory( Ptr dumpStorage, long* dumpBytes );	virtual void	GetDumpMemory( Handle aHandle );	virtual void	SetSelection( long start, long end );// general purpose search method:		virtual Boolean	FindByteString( Ptr targData,									long targDataLen,									long* startOffset,									Boolean wrap = FALSE );// info:		inline void		GetSelectionRange( long* start, long* end ) { *start = selStart; *end = selEnd; };	inline long		GetLength() { return dumpLength; };	protected:// rendering:	inline 	void	DrawHexLine( Ptr lineStartAddr, char bytesInLine = BYTES_PER_LINE );	inline 	void	DrawLongAsHex( long val );// interface calculations:		virtual long	GetOffset( short hLoc, short vLoc );	virtual void	CalcSelection( long offsetStart, long offsetEnd, RgnHandle aRgn );	virtual void	DrawCaret( Boolean state );	// find dialog:	virtual void	OpenFindDialog();	// scroller overrides:	virtual void	MoveScrollbars();	virtual void	HideScrollbars( Boolean validateArea );// hex editor utilities:		void			PrepareForEdit();	void			Munge( Ptr dataToInsert, long dataLength );	void			RecalcBoundsAndSelection();	void			MoveCaret( short cDirection, Boolean shifted = FALSE );	void			RedrawOnType( long offset );	virtual void	TypeInData( char theKey );	void			ScrollToCaret();	void			SetSelectionRgn( RgnHandle aRgn );	void			ConvertHexSearchString( Str255 aString );	virtual short	CalcCaretHOffset( long offset );		virtual void	DrawPlacard();	virtual void	DrawHeader();};// misc constants, etc:#define		kTooMuchDataToEditErr		391#define		kHexFindDialogResID			199#define		kHFindButton				1#define		kHFindTextItem				2#define		kHFindHexStringItem			4#define		kHFindAsciiStringItem		5#define		kHWrapItem					6// constants passed to MoveCaret():enum{	left,	right,	up,	down,	halfRight,	toEnd,	toBeginning,	toEndOfLine,	toBeginningOfLine};// hex editor commands:enum{	kCmdFindHexadecimal	= 199L};/*This class implements a complete hexadecimal dump editor, which should be of use to programmersof utilities, etc. You can dump any handle, pointer, or file, as long as the data length isviewable within the 32K quickdraw pixels available, which typically gives a maximum of about45 to 47K of data with 16 bytes per line. Use SetDumpMemory() to establish the initial dump. Ifedited, this data is copied to an internal handle which is modified as required. UseGetDumpMemory() to recover the modified data.Full cut and paste is supported, data is placed on the clipboard as type 'TEXT'. Any type on theclipboard can be pasted. Similarly, data can be saved in a file of type 'TEXT', but any file canbe opened (subject to what is displayed in the Open dialog by ZApplication). At present, editingis not undoable.This class supports a standard "Find" dialog (the file HexEditor.rsrc contains the components ofthis- add to your project or project's resource file). This dialog is modeless and is sharedamong any number of instances of ZHexEditor, the one immediately behind the dialog being targetedby the find command. Naturally you can override this if you don't need it, or want to implementsomething more sophisticated.This class requires MacZoop 1.8 or later for proper operation, since it relies on certain changesto ZScroller, ZWindowManager, etc. being present.*/#endif