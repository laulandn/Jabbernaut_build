/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZUndoTask.cpp			-- a generic object for implementing Undo******			© 1996, Graham Cox*****************************************************************************************************/#include	"ZUndoTask.h"#include	"ZView.h"#include	"ZWindow.h"#include	"MacZoop.h"/*------------------------------***  CONSTRUCTOR  ***--------------------------------*/ZUndoTask::ZUndoTask( Str63 aTaskString, ZView*	aTarget){	classID = CLASS_ZUndoTask;		CopyPString( aTaskString, taskString );	itsTarget = aTarget;	undone = FALSE;	isFirstTask = FALSE;}/*------------------------------***  CONSTRUCTOR  ***--------------------------------*/ZUndoTask::ZUndoTask( const short strListID, const short strListIndex, ZView* aTarget ){	classID = CLASS_ZUndoTask;		GetIndString( taskString, strListID, strListIndex );	itsTarget = aTarget;	undone = FALSE;	isFirstTask = FALSE;}/*-------------------------------------***  DO  ***-------------------------------------*//*	perform the task. This is normally overridden to do something useful! You should call theinherited method to maintain the status flag.----------------------------------------------------------------------------------------*/void	ZUndoTask::Do(){	undone = FALSE;	if ( itsTarget && isFirstTask )		itsTarget->GetRootWindow()->SetDirty( TRUE );}/*------------------------------------***  UNDO  ***------------------------------------*//*	undo the task performed by Do. Normally overridden- call the inherited method to maintainthe status flag.----------------------------------------------------------------------------------------*/void	ZUndoTask::Undo(){	undone = TRUE;		if ( itsTarget && isFirstTask )		itsTarget->GetRootWindow()->SetDirty( FALSE );}/*------------------------------------***  REDO  ***------------------------------------*//*override if your redo is different from your Do. Normally they are not so you don't needto override this in most cases.	----------------------------------------------------------------------------------------*/void	ZUndoTask::Redo(){	Do();}/*------------------------------***  GETTASKSTRING  ***---------------------------------*//*returns the task's string. Normally only called from the application to maintain thewording in the Edit menu.----------------------------------------------------------------------------------------*/void	ZUndoTask::GetTaskString( Str63 aTaskStr ){	CopyPString( taskString, aTaskStr );}