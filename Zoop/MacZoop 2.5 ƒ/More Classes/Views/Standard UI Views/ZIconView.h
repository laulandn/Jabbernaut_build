/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZIconView.h		-- view that draws icons******			©2000, Graham Cox*****************************************************************************************************/#pragma once#ifndef __ZICONVIEW__#define	__ZICONVIEW__#include	"ZItemView.h"#include	"MZIconListTypes.h"#include	"MZDialogTypes.h"DEFINECLASSID( ZIconView, 'zicn' );// the class:class	ZIconView	: public ZItemView{private:	Handle		fMacIcon;	IconType	fType;	short		fID;public:	ZIconView( ZView* aParent, Rect* aFrame, const short iconID );	ZIconView( ZView* aParent, IconType aType, const short resID );	ZIconView( ZView* aParent, const short viewResourceID );	virtual ~ZIconView();		virtual void		DrawContent();	virtual void		InitViewFromResource( Handle theRes );	virtual void		CreateViewResource( Handle resHandle );	virtual void		ReportFields();	protected:	virtual void		LoadMacIcon( IconType aType, const short resID );};/*simple class is basis for drawing all types of icons.The main constructor allows you to load the "best" icon based on the hierarchyof icn family, colour icon, black and white icon repectively.The other construtor allows you to load a specific type.If the frame is NULL, the frame will be set from the icon itself. If not null, theicon will be scaled to fit when drawn, if possible, or else centred in the frame.*/DICONSTRUCTORPROTOTYPE( ZIconView );#if PRAGMA_ALIGN_SUPPORTED#pragma options align=mac68k#endif// structure of 'View' resource for ZIconView:typedef struct{	ItemViewTemplate	ivt;	IconType			iType;	short				iconID;}IconViewTemplate, *IconViewTemplatePtr, **IconViewTemplateHdl;#if PRAGMA_ALIGN_SUPPORTED#pragma options align=reset#endif#endif