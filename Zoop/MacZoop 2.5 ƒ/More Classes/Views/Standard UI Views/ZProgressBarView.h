/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZProgressBarView.h		-- a progress indicator view******			©2000, Graham Cox*****************************************************************************************************/#pragma once#ifndef __ZPROGRESSBARVIEW__#define	__ZPROGRESSBARVIEW__#include	"ZItemView.h"#include	"MacZoopTypes.h"#include	"ProjectSettings.h"#include	<appearance.h>DEFINECLASSID( ZProgressBarView, 'zpgv' );// the class:class	ZProgressBarView	: public ZItemView{private:	ProgType			fMode;	unsigned long		fValue;	Rect				fBarRect;	short				fBackPatID;	short				fForePatID;	PixPatHandle		fStripesPat;#if APPEARANCE_MGR_AWARE	UInt8				fPhase;	ThemeTrackDrawInfo	fTrackInfo;#endif	public:	ZProgressBarView( ZView* aParent, Rect* aFrame, const long max, ProgType barType = kProportionalProgress );	virtual ~ZProgressBarView();	virtual void		DrawContent();	virtual void		SetValue( const long aVal );	virtual void		SetMaximum( const long aMax );	virtual long		GetValue() { return fValue; };	virtual void		Animate();		virtual void		SetDisplayMode( ProgType aMode );	inline	ProgType	GetDisplayMode() { return fMode; };protected:	inline	void		DrawEmptyBar();	inline	void		UpdateBar();	void				FillInTrackInfo();};// pattern IDs used for bar (non-appearance, 'ppat' resources)enum{	kStdProgressBarPattern			= 129,	kStdProgressBarBackPattern		= 128,	kStdProgressBarStripedPattern	= 130,	kStandardProgressBarHeight		= 14};// utility function can be registered as dialog item constructor:ZView*		CreateNewProgressBarView( ZView* aParent, Rect* aFrame, short pCount, long params[] );#if PRAGMA_ALIGN_SUPPORTED#pragma options align=mac68k#endif// structure of 'View' resource for ZProgressBarView:typedef struct{	ItemViewTemplate	ivt;	ProgType			mode;	long				value;}ProgressBarViewTemplate, *ProgressBarViewTemplatePtr, **ProgressBarViewTemplateHdl;#if PRAGMA_ALIGN_SUPPORTED#pragma options align=reset#endif/*This draws a progress bar. It is not a control, but is theme aware. This means thatthis same view class can be used on non-appearance systems (will adopt the olderFinder style appearance there).You can also use ZControlView for this, with the progress CDEF, but that will requireSystem 8.5 or later*/#endif