/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZObjectListViewHeader.cpp		-- header view for object inspector******			©2000, Graham Cox*****************************************************************************************************/#include	"ZObjectListViewHeader.h"#include	"MacZoop.h"/*--------------------------------***  CONSTRUCTOR  ***----------------------------------*/ZObjectListViewHeader::ZObjectListViewHeader( ZView* aParent, Rect* aFrame )	: ZView( aParent, aFrame ){	SetBackColour( &gLightGray );	SetFontInfo( kFontIDGeneva, 9, 0 );}	/*-------------------------------***  DrawContent  ***----------------------------------*//*access:			publicoverrides:		description: 	render the contents of this viewins: 			noneouts: 			nonenotes:			----------------------------------------------------------------------------------------*/void	ZObjectListViewHeader::DrawContent(){	Rect		br;		GetBounds( &br );#if APPEARANCE_MGR_AWARE	if ( gMacInfo.hasAppearanceMgr )	{		DrawThemePlacard( &br, IsActive()? kThemeStateActive : kThemeStateInactive );	}	else	{#endif		MoveTo( br.left, br.bottom - 1 );		LineTo( br.right, br.bottom - 1 );#if APPEARANCE_MGR_AWARE	}#endif#if __OBJECT_DEBUG		long		n;	FontInfo	fi;	Str31		s;		PrepareForDrawing();	GetFontInfo( &fi );	n = ZObject::CountInstances();	NumToString( n, s );	ConcatPStrings( s, "\p MacZoop object instances." );		MoveTo((( br.left + br.right ) / 2 ) - ( StringWidth( s ) / 2 ), fi.ascent + 1 );	DrawString( s );	MoveTo( 3, br.bottom - fi.descent - fi.leading - 3 );	DrawString( "\pID" );	MoveTo( 45, br.bottom - fi.descent - fi.leading - 3 );	DrawString( "\pObject Class Type" );	MoveTo( 175, br.bottom - fi.descent - fi.leading - 3 );	DrawString( "\pAddress" );	MoveTo( 255, br.bottom - fi.descent - fi.leading - 3 );	DrawString( "\p->GetDebugInfo()" );#endif}void	ZObjectListViewHeader::SetSize(const short width, const short height ){	ZView::SetSize( width, height );	PostRefresh();}