/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZMenubarView.h		-- menubar that can be used in any window******			©2001, Graham Cox*****************************************************************************************************/#pragma once#ifndef __ZMENUBARVIEW__#define	__ZMENUBARVIEW__#include	"ZView.h"#include	"ZMenuBar.h"DEFINECLASSID( ZMenuBarView, 'zmbv' );// the class:class	ZMenuBarView	: public ZView, public ZMenuBar{protected:	ZArray*		fTitles;	short		fCurHilite;		public:	ZMenuBarView( ZView* aParent, Rect* aFrame = NULL, const short mbarID = 0 );	virtual ~ZMenuBarView();		virtual void	DrawContent();	virtual void	ClickContent( const Point mouse, const short modifiers );	virtual void	DispatchCommand( const long mSelect, const short modifiers );	virtual void	SetTitleHilite( const short menuID, const Boolean state );protected:	virtual void	DrawThemeMenuBar();	virtual void	GetMenuTitleRect( short menuID, Rect* tRect );	virtual void	InitTitles();	virtual void	DrawTitles();	virtual void	LoadMenus( const Boolean autoInstall = FALSE );	virtual void	Draw1MenuTitle( const short which, const Boolean selected );	virtual short	FindClickedMenu( const Point mouse );	virtual long	TrackMenuBar( const Point mouse );		virtual long	TrackMenu( const short which );	virtual void	PrepareMenusForDisplay();	static pascal void	DrawMTCallback( const Rect *inBounds, SInt16 inDepth, Boolean inIsColorDevice, SInt32 inUserData );	static pascal void	MTHookCallback();	#if TARGET_API_MAC_CARBON	#include	<CarbonEvents.h>		static pascal void	MTHookEventTimerCallback( EventLoopTimerRef inTimer, void *inUserData );#endif		static RgnHandle	sMBarExclusionRgn;	};// type stored in titles array:typedef struct{	short	menuID;	Rect	titleRect;	Str31	title;}MenuTitleInfo, *MenuTitleInfoPtr;enum{	kStdMiniMenubarHeight	= 16,	kMBarOffsetToFirstTitle	= 10,	kMBarTitleMarginAllowance = 12,	kMiniBarStandardMenuID	  = 32755};/*This view implements a menubar that can be deployed in a window (like on a certain other OS)While useful, always consider the HI implications before settling on this.This view draws a menu bar and will display menus as built from the MBAR resource specified.Because it inherits from ZMenuBar, the full API to deal with menu commands, etc is availablehere. When a menu item is chosen, the command is sent to the view's parent initially. Ifyou need commands to go to the general command chain, the parent object can arrange this,but its something you have to code.The font settings you set in this class apply to all menus it displays. It is otherwisefully theme aware.*/#endif