/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZNetComrade.h 	-- comrade that works across a net with other apps!******			© 1998, Graham Cox*****************************************************************************************************/#pragma once#ifndef __ZNETCOMRADE__#define __ZNETCOMRADE__#include	"ZComrade.h"#include	<PPCToolbox.h>typedef enum{	ppcDormant,	ppcInitialised,	ppcWaitingToConnect,	ppcWaitingForConnection,	ppcConnected,	ppcReceiving,	ppcTransmitting}ZNCStatus;typedef struct{	OSType			type;	unsigned long	length;	Ptr				buffer;}RxDataInfo, *RxDataInfoPtr;class	ZNetComrade	: public ZComrade{protected:	PPCParamBlockRec	ppc;	PPCWritePBRec		ppcwr;	PPCPortRefNum		localPortRefNum;	PPCSessRefNum		sessionRefNum;	long				userRefcon;	ZNCStatus			status;	OSType				portType;	OSType				portCreator;	LocationNameRec		remoteLocation;	PortInfoRec			remotePortInfo;		Ptr					rxBuffer;	Boolean				actAsServer;	Boolean				remoteInfoValid;	Boolean				writeChannelClear;		public:	ZNetComrade( OSType aPortType, OSType aPortCreator = 0, Str31 friendlyName = NULL );	virtual ~ZNetComrade();		virtual void			WaitForConnection();	virtual void			InitiateConnection( Boolean useSecure = FALSE );	virtual Boolean			Browse( OSType portTypes = 0, OSType portCreators = 0 );	virtual void			Poll();	virtual void			SendData( OSType dataType, Ptr buffer, long dLen );	virtual void			SendMessage( long aMsg, void* msgData, long dataSize = 0 );	virtual void			Disconnect();		inline	ZNCStatus		GetStatus() { return status; };	inline	Ptr				GetRXBuffer() { return rxBuffer; };		virtual Handle			GetRemoteConnectionInfo();	virtual void			SetRemoteConnectionInfo( Handle rcInfo );	protected:	void	OpenPort( Str31 friendlyName );	void	ClosePort();	void	CheckAndInitialisePPC();	void	StartReading();};#define		kReceiveBufferSize			4096#define		kAppletalkNotAvailErr		113#define		kProgramLinkingNotOnErr		114#define		kRemoteInfoNotValidErr		115#define		kRemoteInfoBadDataErr		116#define		kBadStatusForOperationErr	117#define		kWriteChannelBusyErr		118#define		kPortNameExportResID		140// messages:enum{	kPPCMsgDataReceived		= 'ppcd',	kPPCMsgConnectionMade	= 'ppcx',	kPPCMsgConnectionBroken = 'ppc~',	kPPCMsgClearToSend		= 'ppct',	kNetComradeMetaMessage	= 'meta'};#endif