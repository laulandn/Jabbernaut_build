/****************************************************************************************************			MacZoop - "the framework for the rest of us"		 ****			ZFolderScanner.h	-- a generic object for recursively searching folders******			© 1996, Graham Cox*****************************************************************************************************/#pragma once#ifndef __ZFOLDERSCANNER__#define	__ZFOLDERSCANNER__#ifndef __ZFILE__#include	"ZFile.h"#endifclass	ZProgress;enum{	CLASS_ZFolderScanner	= 'zfsc'};class	ZFolderScanner : public ZFile{protected:	short		curDepth;		short		searchDepth;	short		sProg;	long		topDirID;	Boolean		useProgressDialog;	ZProgress*	itsPD;	CInfoPBRec 	pb;	Str31		fName;public:		ZFolderScanner( const FSSpec& rootFolder );	ZFolderScanner();		~ZFolderScanner();		virtual void	SetSearchDepth( const short aSearchDepth );	virtual Boolean	PickFolder();	virtual void	ScanFolder();		inline 	void	SetUseProgress( Boolean useIt ) { useProgressDialog = useIt; };	inline	long	GetFolderID() { return topDirID; };	protected:	virtual void	Scan1Folder( const long dirID );	virtual void	Process1File( const FSSpec& aSpec, const OSType fType );	virtual void	Process1Folder( const FSSpec& aSpec );};// messages this transmits to its listeners...enum{	msgFolderscanProcess1File 	= 'fscf',	msgFolderscanProcess1Folder = 'fscd',	kDefaultSearchDepth			= 0,	kPickFolderDialogID			= 8001,	kPickFolderButton			= 13,	kStdButtonTextStrID			= 128,	kMacZoopFolderFileType		= 'fold'};// pass these to SetSearchDepth:enum{	kScanEveryFolderInHierarchy	= -1,	kScanRootFolderOnly = 1};// structure used for selecting directories in pickertypedef struct{	StandardFileReply	aReply;	Boolean				selectHit;	Boolean				dirFlag;}tFolderInfo;// structure used to pass filespec + type in messages:typedef struct{	FSSpec		aSpec;	OSType		aType;}tProcessFileInfo;// file manager enhancements:Boolean					ChooseFolder(FSSpec* folderSpec);#if !TARGET_API_MAC_CARBONstatic pascal Boolean	GetDirFileFilter( CInfoPBRec* pb, void* fInfo);static pascal short		GetDirDlgHook(short item, DialogPtr theDialog, void* fInfo);static void				SetSFButtonTitle(ControlHandle theButton, FSSpec* theFile, Rect* buttonRect);#endif/*This object is useful for doing general recursive searches through a hierarchy of folders. Foreach file it encounters, it calls Process1File with the file spec. You can override thismethod to do whatever you want with the file. If another folder is encountered, it callsScan1Folder recursively to the maximum depth you set with SetSearchDepth(). By default this is0, so it only searches the first folder. Pass -1 to search all folders below the first folderas well. If you want to search the entire hard disk, pass the FSSpec of the hard disk in theconstructor, or use the default constructor to search the startup disk.To kick off a search, simply call ScanFolder().To provide a user-interface for selecting a folder, call PickFolder(). This presents a customStandard File dialog to pick a folder, which then becomes the current folder. You can then callScanFolder to search it.Sincethis inherits from ZFile, you can call GetFSSpec, etc. However, it is meaningless to try tocall Open, etc. on this object, since the spec should be for a folder.*/#endif