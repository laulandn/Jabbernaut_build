/****************************************************************************************************			MacZoop - "the framework for the rest of us"			 ****			ZPrefsFile.cpp			-- the prefs file object******			© 1996, Graham Cox*****************************************************************************************************/#include	"ZPrefsFile.h"#include	"MacZoop.h"#include	<folders.h>/*-------------------------------***  CONSTRUCTOR  ***----------------------------------*/ZPrefsFile::ZPrefsFile( Str255 fName )	: ZResourceFile( sDummySpec ){	short	foundVR;	long	dirID;	OSErr	theErr;		itsType = kPrefsFileType;		FailOSErr( FindFolder( kOnSystemDisk, kPreferencesFolderType, TRUE, &foundVR, &dirID ));		theErr = FSMakeFSSpec( foundVR, dirID, fName, &itsSpec );		if ( theErr == fnfErr )		CreateResFork();	else		FailOSErr( theErr );}/*-------------------------------***  CONSTRUCTOR  ***----------------------------------*/ZPrefsFile::ZPrefsFile()	: ZResourceFile( sDummySpec ){	short	foundVR;	long	dirID;	OSErr	theErr;		itsType = kPrefsFileType;	FailOSErr( FindFolder( kOnSystemDisk, kPreferencesFolderType, TRUE, &foundVR, &dirID ));		// make the filename by using the app's name and appending "prefs" (STR#128/16)		Str255	fName;	Str31	pf;		gApplication->GetName( fName );	GetIndString( pf, 128, 16 );		// check final result is within allowed limit for filename by chopping off	// the end of the app name as needed.		if ( fName[0] + pf[0] > 31 )		fName[0] -= ( fName[0] + pf[0] - 31 );		ConcatPStrings( fName, pf );		theErr = FSMakeFSSpec( foundVR, dirID, fName, &itsSpec );		if ( theErr == fnfErr )		CreateResFork();	else		FailOSErr( theErr );}