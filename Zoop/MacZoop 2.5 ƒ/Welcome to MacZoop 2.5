Welcome to MacZoop 2.5Major new features at a glance	¥ Comprehensive Views architecture makes creating complex user interfaces a breeze	¥ Many new views classes prebuilt for creating cool user interfaces	¥ Fully appearance-savvy	¥ New dialog layer completely built on views - problematic Dialog Manager no longer involved	¥ Greater scalability to larger projects while retaining simplicity for small ones	¥ Fully Carbon compliant - same source will compile to classic 68K and PowerPC, Carbon for Mac OS 8/9 and X.	¥ Built-in tooltip support	¥ Many objects enhanced and rationalised without sacrificing code compatibility	¥ Tabbed dialog interfaces can be built with one line of code	¥ Powerful new list interface class	¥ New text class. All editing is now fully undoable ¥ MPW compliant right out of the box - no longer requires changes to the code to use MPW (Make files included)	¥ Updated demo illustrates many of the new classes and featuresMacZoop 2.5 is a major upgrade to the popular and free MacZoop framework. So much has been improved and enhanced that it could almost have been version 3.0, but I've saved that one for later... This document highlights some of the new features, and gives you some information about moving code from older versions of MacZoop to version 2.5. If you obtained this SDK from somewhere other than the website (a CD for example), The website is essential for updates, documentation and getting technical support.		http://www.maczoop.comStandard FeaturesThese features have been available in MacZoop for some time, but this is a quick reminder if you're new:	¥ Small, efficient C++ design, defers to OS when appropriate, so minimises "bloatware" phenomenon	¥ Standardises Human Interface behaviour so it all "just works" as expected	¥ Layered window model (floaters) even on classic OS prior to 8.6	¥ Supports modern additions such as proxy icons, drop-down path menus, etc.	¥ Full error protection and recovery based on native C++ exceptions	¥ Simple and powerful command chain architecture	¥ Multiple Undo limited only by memory	¥ Can leverage basic free tools such as ResEdit	¥ Undemanding sytem requirements - can still build apps for System 7.x	¥ Completely freeMacZoop DocumentationAt the time of release of version 2.5, the manual for MacZoop has not been updated from version 2.1. This will follow as soon as time permits, but much of the information in the manual is still very much relevant to MacZoop 2.5. There are supplementary documents pertaining to views, the new dialog architecture and the views-based classes which are downloadable separately. Eventually they will be rolled into the main manual. For now, you will need to obtain them as a separate download. The URL is:		ftp://www.maczoop.com/maczoop/docs/2.5docs.sit.hqxWhere the existing manual differs from the actuality in the code, naturally the code is the canonical source of information. Virtually all of the source files have been recommented so that each method and function has a complete description of what it does and the various parameters it accepts and results it returns. However, a lot of effort has been put into avoiding the gratuitous invalidation of documented methods and techniques, so the current manual, when read in conjunction with the supplementary documentation, will by and large be correct and give good results.If you are interested in a detailed change history of MacZoop as it was developed from version 2.1 through 2.2 to 2.5 (there was never a 2.3 or 2.4 by the way), these documents are found in the "Readme Files" folder.TutorialA new tutorial has been written which is closely based on the one published in the original manual, but updated to use views. This will be extremely valuable in helping you to orient yourself to how views work, so if you are new to MacZoop, the tutorial is a highly recommended first step. The tutorial is now part of the SDK.New UsersNew users should be able to dive into MacZoop without fear or prejudice. The tutorial is the ideal first port of call, then compiling and running the demo application. New applications should be built using views and the new 2.5 methodology. The older dialog code and dialog widget classes are provided in the "Deprecated Classes" folder in the SDK, but unless you are moving a project that was already built using an older version of MacZoop, there is no reason to ever need this code. After a reasonable transition period, these classes will no longer be distributed or supported.Existing UsersIf you're an existing MacZoop user, the new features should present few problems in the main. If you have code based on an earlier version of MacZoop, chances are it will compile and run with almost no changes needed. The older Dialog Manager based classes are still available and should work as normal. However, it is very much encouraged that this code is gradually phased out in favour of the much better views-based code. You may want to do this anyway, but the key thing is that you don't have to. If you intend to use MacZoop into the future, you may prefer to start this process sooner rather than later. Certainly for new applications there is no reason to use the old code - the newer equivalents are far more comprehensive and work better, and as new features are added to MacZoop, it will be through this mechanism and not the older Dialog Manager based one.The new dialog architecture is a good place to start, because it incorporates views without explicit coding. Existing DLOG and DITL resources are used just as before to create the dialogs, and the API presented to your application is similar to the old one. There are some new features and some old features are no longer supported or handled differently - the 2.5 supplementary docs expand on this in detail, but on the whole, your dialogs can be moved to the new architecture with a minimum of fuss. If you have subclassed ZDialog to implement special behaviours, you will have a little more work on your hands, but message-based dialogs should need very little effort indeed.Dialog widgets, etc.All the older dialog widgets have been replaced by an equivalent view. In addition, there are new types of widgets available in 2.5 that are not available in the older code, and never will be. If you created a custom dialog widget of your own, you will need to redesign it to be based on views to use it in a new dialog or window. This will generally be beneficial to you, allowing much greater deployment and reuse of the code than previously. However, this will involve a fair bit of work depending on how complex your widget is, so be prepared for this to take more than a superficial number of hours.The List Manager-based list widgets are also deprecated in favour of a powerful new view, ZArrayBrowser. This class is useful for many kinds of lists that previously were handled by the List Manager, and is far easier to use and customise. Applications that previously relied on the List Manager will benefit from this new class.Carbon and AppearanceCarbon is fully supported. In MacZoop 2.5, Carbon projects are set up as just another target within each CodeWarrior project, so it is now much easier to create a Carbon application than previously. In general you can maintain your code in parallel for all targets effortlessly, though if you are working exclusively with Carbon this is also fine. Some features will require CarbonLib 1.1 or later (1.2 or newer recommended) - CarbonLib 1.0.4 is supported but not for all features. MacZoop 2.5 can still be built for 68K targets, though it is likely that this ability will disappear by the time of the next major release. Appearance is fully supported by views, though AppearanceLib 1.1 or newer is required for classic targets. You can still compile an application for classic targets that is not appearance aware, but this is also likely to be the last release that supports this. Carbon targets are appearance aware by default, and this cannot be changed.MacZoop 2.5.x is a bridge between Classic Mac OS and OS X. As we move forward, new features will often be implemented using Carbon-only technologies, and the older targets will gradually be left behind. This version represents the last major revision that is likely to support all targets equally.Thanks dueMy very grateful thanks are due to all of those users who have contributed their time and effort to work through the development of MacZoop 2.5, reporting bugs, isolating problems, suggesting and writing fixes, and writing complete classes. This combined effort means that this version is more solid than ever before and is the best framework available for its price ;-) Many thanks to you all, long may it continue!Graham Cox27th February, 2001MacZoop 2.5.0 final