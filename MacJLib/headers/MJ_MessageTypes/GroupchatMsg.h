/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		GroupchatMsg.h *  Created:	2000-11-07 *	Authors:	MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#pragma once#include "BaseIQMsg.h"#include "GroupchatItem.h"#include <list>#if USE_MACJLIB_NSnamespace MacJLib{#endif#pragma mark class GroupchatMsgclass GroupchatMsg : public BaseIQMsg{	public:		GroupchatMsg();		GroupchatMsg( const JID &inJID );	//this will set the type="get" and the to=inJID		GroupchatMsg( const CElementNode &inIQ );		~GroupchatMsg();				const GroupchatItemList&	groupchatItems() const									{ return mGroupchatItems; }		const StringList&			nickList() const									{ return mNickList; }				const std::string&			getKey() const;		const std::string&			getSecret() const;		void						setSecret( const std::string &inName );		void						setPrivacy( bool inPrivacy );		const std::string&			getTopic() const;		void						setTopic( const std::string &inName );		GroupchatMsg				*makeReply() const;				Ptr							toXML() const;		long						size() const;	protected:		virtual void				visitQueryNode( const CElementNode& aNode );		virtual std::string			getXMLNS() const									{ return msXMLNS; }	public:		static const std::string	msXMLNS;	protected:		GroupchatItemList			mGroupchatItems;		StringList					mNickList;		std::string					mKey;		std::string					mSecret;		std::string					mTopic;};#pragma mark class GroupchatTagHandlertypedef IQTagHandler<GroupchatMsg>	GroupchatTagHandler;#if USE_MACJLIB_NS}#endif