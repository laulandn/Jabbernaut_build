/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		MessageMsg.h *  Created:	2000-??-?? *  Authors:	CB - Chris Behm <cjbehm@mail.com> *				MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#pragma once#include	"BaseMsg.h"#include	"TagHandler.h"#if USE_MACJLIB_NSnamespace MacJLib {#endifstruct MessageMsgHeader : BaseMsgHeader{	std::string		body;	std::string		subject;	std::string		thread;};#pragma mark class MessageMsgclass MessageMsg : public BaseMsg{	public:		MessageMsg();		MessageMsg( const MessageMsgHeader *pTMsgHdr );		MessageMsg( const CElementNode& iNode );		explicit MessageMsg( const MessageMsg& pTxtMsg );		virtual ~MessageMsg();				MessageMsg			*makeReply() const;				void				setBody( const std::string &iBody );		const std::string	&getBody() const;				void				setSubject( const std::string &iSubject );		const std::string	&getSubject() const;				void				setThread( const std::string &iThread );		const std::string	&getThread() const;				Ptr					toXML() const;		long				size() const;	protected:		virtual void		visitNode( const CElementNode& aNode );	protected:		std::string		mBody;		std::string		mSubject;		std::string		mThread;};#pragma mark class MessageTagHandlerclass	MessageTagHandler : public TagHandler{	bool			Match( const CElementNode& inTag )		{ return inTag.GetName() == "message"; }	ParseableNode*	Process( const CElementNode& inTag )	{ return new MessageMsg( inTag ); }};#if USE_MACJLIB_NS}#endif