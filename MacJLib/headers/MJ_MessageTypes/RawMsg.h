/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		RawMsg.cp *  Created:	2000-04-01 *  Authors:	CB - Chris Behm <cjbehm@mail.com> *				MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#pragma once#include	"BaseMsg.h"#include	"TagHandler.h"#if USE_MACJLIB_NSnamespace MacJLib {#endif#pragma mark class RawMsgclass RawMsg : public BaseMsg{	// TODO: switch to using a std::string for data storage (makes life easier)	protected:		Ptr				mTxt;		unsigned long	mLen;	public:		RawMsg();		RawMsg( const CElementNode& pNode );		RawMsg( const char *aStr );		RawMsg( ConstStr255Param aStr );		explicit RawMsg( const RawMsg& inRawMsg );		virtual ~RawMsg();				void setText( const char *aStr );		void setText( ConstStr255Param aStr );		const char *getText();				Ptr toXML() const;		long size() const;};#pragma mark class RawTagHandlerclass	RawTagHandler : public TagHandler{	// This is a catch-all tag handler which can be used for all unknow messages	bool			Match( const CElementNode& inTag )		{ return true; }	ParseableNode*	Process( const CElementNode& inTag )	{ return new RawMsg( inTag ); }};#if USE_MACJLIB_NS}#endif