/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		PresenceMsg.h *  Created:	2000-??-?? *  Authors:	CB - Chris Behm <cjbehm@mail.com> *				MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#pragma once#include	"BaseMsg.h"#include	"NumericString.h"#include	"TagHandler.h"#if USE_MACJLIB_NSnamespace MacJLib {#endifstruct PresenceMsgHeader : BaseMsgHeader{	std::string		status;	std::string		show;	NumericString	priority;};#pragma mark class PresenceMsgclass PresenceMsg : public BaseMsg{	public:		PresenceMsg();		PresenceMsg( const PresenceMsgHeader *iPresHdr );		PresenceMsg( const CElementNode& pr );		explicit PresenceMsg( const PresenceMsg& iPres );		virtual ~PresenceMsg();				void				setStatus(const std::string &iStatus);		const std::string	&getStatus() const;		void				setShow(const std::string &iShow);		const std::string	&getShow() const;		void				setPriority( long iPriority );		long				getPriority() const;				Ptr					toXML() const;		long				size() const;	protected:		virtual void		visitNode( const CElementNode& aNode );	protected:		std::string			mStatus;		std::string			mShow;		NumericString		mPriority;};#pragma mark class PresenceTagHandlerclass	PresenceTagHandler : public TagHandler{	bool			Match( const CElementNode& inTag )		{ return inTag.GetName() == "presence"; }	ParseableNode*	Process( const CElementNode& inTag )	{ return new PresenceMsg( inTag ); }};#if USE_MACJLIB_NS}#endif