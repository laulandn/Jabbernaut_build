/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		TagHandler.h *  Created:	2000-09-13 *  Authors:	MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#pragma once#include	"MacJLibPrefix.h"#include	"Node.h"#if USE_MACJLIB_NSnamespace MacJLib {#endif// forward declaration of ParseableNodeclass ParseableNode;// The TagHandler class is the base for functor classes that can construct// ParseableNodes out of CTagNodes.#pragma mark class TagHandlerclass TagHandler{public:	inline ParseableNode*	operator()( const CElementNode& inTag )							{								if( Match(inTag) )									return Process(inTag);								else									return NULL;							}protected:	virtual bool			Match( const CElementNode& inTag ) = 0;	virtual ParseableNode	*Process( const CElementNode& inTag ) = 0;};typedef std::list<TagHandler*> TagHandlerList;#if USE_MACJLIB_NS}#endif