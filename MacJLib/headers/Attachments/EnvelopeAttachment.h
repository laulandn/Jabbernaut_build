/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		EnvelopeAttachment.h *  Created:	2000-09-20 *  Authors:	MH - Max Horn <max@quendi.de> *				CB - Chris Behm <cjbehm@mail.com> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#pragma once#include	"MacJLibPrefix.h"#include	"JID.h"#include	"MsgAttachment.h"#if USE_MACJLIB_NSnamespace MacJLib {#endif#pragma mark class EnvelopeAttachmentclass EnvelopeAttachment : public MsgAttachment{	public:		EnvelopeAttachment() : MsgAttachment()									{}		EnvelopeAttachment(const CElementNode &aNode) : MsgAttachment( aNode )	{}	protected:		virtual void				visitNode( const CElementNode& aNode );		virtual std::string			getXMLNS() const							{ return msXMLNS; }		const JID					&getToJID() const;		void						setToJID( const JID &inTo );		const std::string			&getTo() const;		void						setTo( const std::string &inTo );		const JID					&getFromJID() const;		void						setFromJID( const JID &inFrom );		const std::string			&getFrom() const;		void						setFrom( const std::string &inFrom );		const JID					&getCCJID() const;		void						setCCJID( const JID &inCC );		const std::string			&getCC() const;		void						setCC( const std::string &inCC );		const JID					&getForwardedByJID() const;		void						setForwardedByJID( const JID &inForwardedBy );		const std::string			&getForwardedBy() const;		void						setForwardedBy( const std::string &inForwardedBy );		const JID					&getReplyToJID() const;		void						setReplyToJID( const JID &inReplyTo );		const std::string			&getReplyTo() const;		void						setReplyTo( const std::string &inReplyTo );	public:		static const std::string	msXMLNS;	protected:		JID					mToJID;		JID					mFromJID;		JID					mCCJID;		JID					mForwardedByJID;		JID					mReplyToJID;		std::string			mTo;		std::string			mFrom;		std::string			mCC;		std::string			mForwardedBy;		std::string			mReplyTo;};typedef XAttachmentTagHandler<EnvelopeAttachment> EnvelopeAttachmentTagHandler;#if USE_MACJLIB_NS}#endif