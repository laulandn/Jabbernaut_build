/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		MacJLibUtils.h *  Created:	2000-08-05 *  Authors:	MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#pragma once#include	"MacJLibPrefix.h"#include	"MemoryOps.h"#include	<ctime>#include	<list>#include	<string>#if USE_MACJLIB_NSnamespace MacJLib {#endiftypedef	std::list<std::string>	StringList;int				TimeZoneOffsetInSeconds();std::time_t		GetTimeSeconds();std::string		SecondsToUTC( std::time_t secs );std::time_t		UTCToSeconds( const std::string utc );void			ConvertCRs( char *cBuffer, bool cr = false );void			ConvertCRs( std::string &aStr , bool cr = false );void			Trim( std::string & str );std::string		Trim( const std::string & str );void			EscapeXML( std::string & str );std::string		EscapeXML( const std::string & str );inline void		FailOnErr( MacJLibError err )	{ if( err != noError ) throw err; }inline void		FailOnNIL( void* ptr )			{ if( ptr == NULL ) throw (MacJLibError)memFullErr; }#if USE_MAC_ROUTINESinline void		FailOnOSErr( OSErr err )		{ if( err != noErr ) throw (MacJLibError)err; }#endifvoid MJ_AssertError( long lineNo, char* srcFile, char* reason );#if USE_MACJLIB_NS}#endif