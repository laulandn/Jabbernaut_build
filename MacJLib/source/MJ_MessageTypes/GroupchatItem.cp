/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		GroupchatItem.cp *  Created:	2000-11-07 *	Authors:	MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#include	"GroupchatItem.h"#include	"MemoryOps.h"#include	<string.h>#if USE_MACJLIB_NSnamespace MacJLib {#endifGroupchatItem::GroupchatItem(){}GroupchatItem::GroupchatItem( const CElementNode& inTagNode ){	mJID = inTagNode.AttribVal( "jid" );	mRes = inTagNode.AttribVal( "res" );	mName = inTagNode.AttribVal( "name" );}GroupchatItem::~GroupchatItem(){}#pragma mark -const JID &GroupchatItem::getJID() const{	return mJID;}void GroupchatItem::setJID( const JID &inJID ){	mJID = inJID;}const std::string &GroupchatItem::getRes() const{	return mRes;}void GroupchatItem::setRes( const std::string &inRes ){	mRes = inRes;}const std::string &GroupchatItem::getName() const{	return mName;}void GroupchatItem::setName( const std::string &inName ){	mName = inName;}#pragma mark -void GroupchatItem::appendXML( Ptr xmlStr ) const{	if( xmlStr )	{		strcat(xmlStr,"<item");		attrib_strcat(xmlStr,"jid",mJID.getFull());		attrib_strcat(xmlStr,"res",mRes);		attrib_strcat(xmlStr,"name",mName);		strcat(xmlStr,"/>");	}}Ptr GroupchatItem::toXML() const{	Ptr		xmlStr;	long	len;		len = size() + 1;		xmlStr = AllocMemClear( len );	if( xmlStr )	{		appendXML( xmlStr );		ConvertCRs( xmlStr, false );	}		return xmlStr;}long GroupchatItem::size() const{	long	len = 5;//	<item		len += attrib_strlen("jid",mJID.getFull());	len += attrib_strlen("res",mRes);	len += attrib_strlen("name",mName);	len += 2;		//	/>	return len;}#if USE_MACJLIB_NS}#endif