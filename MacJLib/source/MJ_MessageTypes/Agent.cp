/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		Agent.cp *  Created:	2000-05-04 *  Authors:	CB - Chris Behm <cjbehm@mail.com> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#include "Agent.h"#if USE_MACJLIB_NSnamespace MacJLib{#endifAgent::Agent(){	mGroupchat = false;	mRegisterable = false;	mHasSubAgents = false;	mSearchable = false;}Agent::Agent( const CElementNode &inAgentNode ){	CElementNode	*curNode;	mGroupchat = false;	mRegisterable = false;	mHasSubAgents = false;	mSearchable = false;	mJID = inAgentNode.AttribVal( "jid" );		std::string	theName;	for( CNodeList::const_iterator X = inAgentNode.ChildNodes().begin();X != inAgentNode.ChildNodes().end();++X)	{		curNode = dynamic_cast<CElementNode *>(*X);		if( curNode )		{			theName = curNode->GetName();			if( "name" == theName )				TagToString( *curNode, mName );			else if( "description" == theName )				TagToString( *curNode, mDescription );			else if( "service" == theName )				TagToString( *curNode, mService );			else if( "transport" == theName )				TagToString( *curNode, mTransport );			else if( "groupchat" == theName )				mGroupchat = true;			else if( "register" == theName )				mRegisterable = true;			else if( "agents" == theName )				mHasSubAgents = true;			else if( "search" == theName )				mSearchable = true;		}	}}Agent::~Agent(){}#pragma mark -const JID &Agent::getJID() const{	return mJID;}const std::string &Agent::getName() const{	return mName;}const std::string &Agent::getDescription() const{	return mDescription;}const std::string &Agent::getTransport() const{	return mTransport;}const std::string &Agent::getService() const{	return mService;}bool Agent::isGroupChat() const{	return mGroupchat;}bool Agent::isRegisterable() const{	return mRegisterable;}bool Agent::hasSubAgents() const{	return mHasSubAgents;}bool Agent::isSearchable() const{	return mSearchable;}#if USE_MACJLIB_NS}#endif