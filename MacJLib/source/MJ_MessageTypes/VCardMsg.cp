/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		VCardMsg.cp *  Created:	2000-08-21 *  Authors:	MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#include	"VCardMsg.h"#include	"MemoryOps.h"#include	<string.h>#if USE_MACJLIB_NSnamespace MacJLib {#endifVCardMsg::VCardMsg() : BaseIQMsg(){}VCardMsg::VCardMsg( const VCardMsg& iVCardMsg) : BaseIQMsg( iVCardMsg ){}VCardMsg::VCardMsg( const VCardMsgHeader *iVCardMsgHeader ) : BaseIQMsg( iVCardMsgHeader ){	MJ_ASSERT( "iVCardMsgHeader==NULL", iVCardMsgHeader!=NULL )}VCardMsg::VCardMsg( const CElementNode& iq,const CElementNode& iNode) : BaseIQMsg( iq ){}VCardMsg::~VCardMsg(){}#pragma mark -Ptr VCardMsg::toXML() const{	Ptr		xmlStr;	long	len;		len = size() + 1;		xmlStr = AllocMemClear( len );	if( xmlStr )	{		strcat(xmlStr,"<iq");		stdAttribsAppend( xmlStr );		strcat(xmlStr,"><vcard xmlns=\"vcard-temp\">");		//		tag_strcat( xmlStr, "name", mName );				strcat(xmlStr,"</vcard></iq>");		ConvertCRs( xmlStr, false );	}		return xmlStr;}long VCardMsg::size() const{	long len = 3;	//"<iq"		len += stdAttribsSize();		len += 27;							//><vcard xmlns="vcard-temp">	//	len += tag_strlen( "name", mName );		len += 13;							//</vcard></iq>		//this function returns the size of the actual data, which doesn't include the null	//byte, done on purpose		return len;}#if USE_MACJLIB_NS}#endif