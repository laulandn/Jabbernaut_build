/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		JXMLStream.cp *  Created:	2000-06-13 *  Authors:	CB - Chris Behm <cbehm@mail.com> *				MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#include	"JXMLStream.h"#include	"BaseMsg.h"#include	"ParseableNode.h"#if USE_MACJLIB_NSnamespace MacJLib {#endifParseableNode* JXMLStream::ParseNode( const CElementNode& inTag ) const{	ParseableNode*	theMsg = NULL;	for( TagHandlerList::const_iterator X = mMsgTagHandlers.begin(); X != mMsgTagHandlers.end(); ++X )	{		theMsg = (**X)( inTag );		if( theMsg )			break;	}		if( theMsg )	{#if 1		theMsg->parse();#else		CElementNode	*curNode;				for( CNodeList::const_iterator X = theMsg->ChildNodes().begin();X != theMsg->ChildNodes().end();++X)		{			curNode = dynamic_cast<CElementNode *>(*X);			if( curNode )			{				theMsg->visitNode( *curNode );				TryToMakeAttachmen( *curNode, dynamic_cast<BaseMsg*>(theMsg) );			}		}#endif	}			return theMsg;}void	JXMLStream::TryToMakeAttachmen( const CElementNode& inTag, BaseMsg* msg ) const{	ParseableNode*	attachment = NULL;	if( msg == NULL )		return;	for( TagHandlerList::const_iterator X = mAttachmentTagHandlers.begin(); X != mAttachmentTagHandlers.end(); ++X )	{		attachment = (**X)( inTag );		if( attachment )			msg->addAttachment( attachment );	}}#if USE_MACJLIB_NS}#endif