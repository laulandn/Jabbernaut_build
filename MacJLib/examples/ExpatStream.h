/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		ExpatStream.h *  Created:	2000-06-26 *  Authors:	CB - Chris Behm <cbehm@mail.com> *				MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ */#pragma once#include "JXMLStream.h"#include "NodeBuildingHandler.h"#include <queue>#if USE_AUTOMATIC_UTF8  #include "UTFConverter.h"#endif#if USE_MACJLIB_NSnamespace MacJLib{#endifclass CExpatParser;class ExpatStream :	public JXMLStream,					public CNodeBuildingHandler{	protected:		typedef	std::queue<ParseableNode *>		NodeQueue;		NodeQueue			mWaitQ;		CExpatParser	*mParser;#if USE_AUTOMATIC_UTF8		UTFConverter		*mUTF8ToMacConverter;#endif		virtual void		HandleStartElement( const std::string& inName, const CAttributeMap& inAttributesMap );		virtual void		HandleEndElement( const std::string& inName );				void				NodeHandlerWrapper( CAbstractNode& inNode );	public:							ExpatStream();		virtual				~ExpatStream();				void				OpenStream();		void				CloseStream();				void				ParseStream( const char* inStream, std::size_t inLength );		void				ParseStream( const std::string& inStream );				ParseableNode*		GetNextMessage();};#if USE_MACJLIB_NS}#endif