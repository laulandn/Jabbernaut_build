/*Copyright (C) 2000 Max HornThis library is free software; you can redistribute it and/ormodify it under the terms of the GNU Lesser General PublicLicense as published by the Free Software Foundation; eitherversion 2.1 of the License, or (at your option) any later version.This library is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNULesser General Public License for more details.You should have received a copy of the GNU Lesser General PublicLicense along with this library; if not, write to the Free SoftwareFoundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USAContact Chris Behm at cjbehm@mail.comThe GNU LGPL is also readable at http://www.gnu.org/copyleft/lesser.html**** NOTICE ****This class is NOT an official part of MacJLib. It is provided here as an examplefor you how to build a TimeMsg**** NOTICE *****/#include	"CTCPUtils.h"#include	"MemoryOps.h"#include	"XML_Utils.h"std::string	BuildTimeString( std::time_t secs ){	Str255		pStr;#if __POWERPC__	char		cStr[256];	short		len;#endif	std::string	display;	DateString( secs, shortDate, pStr, NULL );#if __POWERPC__	len = pStr[0];	BlockMoveData( pStr+1, cStr, len );	cStr[len] = 0;	display = cStr + std::string(", ");#else	display = p2cstr(pStr) + std::string(", ");#endif	TimeString( secs, true, pStr, NULL );#if __POWERPC__	len = pStr[0];	BlockMoveData( pStr+1, cStr, len );	cStr[len] = 0;	display += cStr;#else	display += p2cstr(pStr);#endif		return display;}typedef char*	TimeZonesTable[24];TimeZonesTable	regularTZs ={	"Greenwich Mean Time",					// UTC	"Central European Time",				// UTC+01	"Eastern European Time",				// UTC+02	"Moscow Time",							// UTC+03	"UTC+04",								// UTC+04	"UTC+05",								// UTC+05	"UTC+06",								// UTC+06	"UTC+07",								// UTC+07	"UTC+08",								// UTC+08	"UTC+09",								// UTC+09	"UTC+10",								// UTC+10	"UTC+11",								// UTC+11	"UTC+12",								// UTC+12	"Samoa Standard Time",					// UTC-11	"Hawaiian-Aleutian Standard Time",		// UTC-10	"Alaska Standard Time",					// UTC-09	"Pacific Standard Time",				// UTC-08	"Mountain Standard Time",				// UTC-07	"Central Standard Time",				// UTC-06	"Eastern Standard Time",				// UTC-05	"Atlantic Standard Time",				// UTC-04	"UTC-03",								// UTC-03	"UTC-02",								// UTC-02	"UTC-01",								// UTC-01};TimeZonesTable	summerTZs ={	"UTC",									// UTC	"Western Europe Summer Time",			// UTC+01	"Central Europe Summer Time",			// UTC+02	"Eastern Europe Summer Time",			// UTC+03	"Moscow Summer Time",					// UTC+04	"UTC+05",								// UTC+05	"UTC+06",								// UTC+06	"UTC+07",								// UTC+07	"UTC+08",								// UTC+08	"UTC+09",								// UTC+09	"UTC+10",								// UTC+10	"UTC+11",								// UTC+11	"UTC+12",								// UTC+12	"UTC-11",								// UTC-11	"UTC-10",								// UTC-10	"Hawaii-Aleutian Daylight Time",		// UTC-09	"Alaska Daylight Time",					// UTC-08	"Pacific Daylight Time",				// UTC-07	"Mountain Daylight Time",				// UTC-06	"Central Daylight Time",				// UTC-05	"Eastern Daylight Time",				// UTC-04	"Atlantic Daylight Time",				// UTC-03	"UTC-02",								// UTC-02	"UTC-01",								// UTC-01};		/*Timezone (w/o daylight):AustraliaWST Western Standard Time, as UTC+8 hours e.g. PerthCST Central Standard Time, as UTC+9.5 hours e.g. DarwinEST Eastern Standard/Summer Time, as UTC+10 hours (+11 hours during summer time) e.g. Canberra*//*ACDT	-1030	Australian Central DaylightACST	-0930	Australian Central StandardADT	0300	(US) Atlantic DaylightAEDT	-1100	Australian East DaylightAEST	-1000	Australian East StandardAHDT	0900	ÊAHST	1000	ÊAST	0400	(US) Atlantic StandardAT	0200	AzoresAWDT	-0900	Australian West DaylightAWST	-0800	Australian West StandardBAT	-0300	BaghdadBDST	-0200	British Double SummerBET	1100	Bering StandardBST	-0100	British SummerBT	-0300	BaghdadBZT2	0300	Brazil Zone 2CADT	-1030	Central Australian DaylightCAST	-0930	Central Australian StandardCAT	1000	Central AlaskaCCT	-0800	China CoastCDT	0500	(US) Central DaylightCED	-0200	Central European DaylightCET	-0100	Central EuropeanCST	0600	(US) Central StandardEAST	-1000	Eastern Australian StandardEDT	0400	(US) Eastern DaylightEED	-0300	Eastern European DaylightEET	-0200	Eastern EuropeEEST	-0300	Eastern Europe SummerEST	0500	(US) Eastern StandardFST	-0200	French SummerFWT	-0100	French WinterGMT	0000	Greenwich MeanGST	-1000	Guam StandardHDT	0900	Hawaii DaylightHST	1000	Hawaii StandardIDLE	-1200	Internation Date Line EastIDLW	1200	Internation Date Line WestIST	-0530	Indian StandardIT	-0330	IranJST	-0900	Japan StandardJT	-0700	JavaKST	-0900	Korean StandardMDT	0600	(US) Mountain DaylightMED	-0200	Middle European DaylightMET	-0100	Middle EuropeanMEST	-0200	Middle European SummerMEWT	-0100	Middle European WinterMST	0700	(US) Mountain StandardMT	-0800	MoluccasNDT	0230	Newfoundland DaylightNFT	0330	NewfoundlandNT	1100	NomeNST	-0630	North SumatraNZ	-1100	New ZealandNZST	-1200	New Zealand StandardNZDT	-1300	New Zealand DaylightNZT	-1200	New ZealandPDT	0700	(US) Pacific DaylightPST	0800	(US) Pacific StandardROK	-0900	Republic of KoreaSAD	-1000	South Australia DaylightSAST	-0900	South Australia StandardSAT	-0900	South AustraliaSDT	-1000	South Australia DaylightSST	-0200	Swedish SummerSWT	-0100	Swedish WinterUSZ3	-0400	USSR Zone 3USZ4	-0500	USSR Zone 4USZ5	-0600	USSR Zone 5USZ6	-0700	USSR Zone 6UT	0000	Universal CoordinatedUTC	0000	Universal CoordinatedUZ10	-1100	USSR Zone 10WAT	0100	West AfricaWET	0000	West EuropeanWST	-0800	West Australian StandardYDT	0800	Yukon DaylightYST	0900	Yukon StandardZP4	-0400	USSR Zone 3ZP5	-0500	USSR Zone 4ZP6	-0600	USSR Zone 5E. South America Standard Time*/