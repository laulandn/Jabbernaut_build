/*Copyright (C) 2000 Max HornThis library is free software; you can redistribute it and/ormodify it under the terms of the GNU Lesser General PublicLicense as published by the Free Software Foundation; eitherversion 2.1 of the License, or (at your option) any later version.This library is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNULesser General Public License for more details.You should have received a copy of the GNU Lesser General PublicLicense along with this library; if not, write to the Free SoftwareFoundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USAContact Chris Behm at cjbehm@mail.comThe GNU LGPL is also readable at http://www.gnu.org/copyleft/lesser.html**** NOTICE ****This class is NOT an official part of MacJLib. It is provided here as an examplefor you to see how you can create semi-unique IDs for Jabber messages**** NOTICE *****/#include	"UniqueID.h"#include	"URandomLib.h"#include	<stdio.h>#include	<string.h>static unsigned long	currentID = 0;static unsigned long	randomSalt = 0;static bool				generatorInited = false;static void				CalcNextUniqueID();std::string	GenerateUniqueID(){	char	idStr[20];	#if 0	CalcNextUniqueID();	sprintf(idStr, "%08lX%08lX", currentID, randomSalt );#else	sprintf(idStr, "%08lX%08lX", PRNG.ULong32(), PRNG.ULong32() );#endif		return std::string(idStr);}/*void	GenerateUniqueID( std::string &anID ){	char	idStr[9];		CalcNextUniqueID();	sprintf(idStr, "%08lX", currentID );	anID = idStr;}void	GenerateUniqueID( MacJLib::BaseMsgHeader &aHeader ){	char	idStr[9];		CalcNextUniqueID();	sprintf(idStr, "%08lX", currentID );	aHeader.id = idStr;}void	GenerateUniqueID( MacJLib::BaseMsg *aMessage ){	char	idStr[9];		CalcNextUniqueID();	sprintf(idStr, "%08lX", currentID );	aMessage->setID( idStr );}*/#pragma mark -void	CalcNextUniqueID(){	if( !generatorInited )	{		currentID = PRNG.ULong32();		generatorInited = true;	}	else	{		currentID += (PRNG.UShort7() % 11) + 1;	// 10 is an arbitrary choosen value	}	randomSalt = PRNG.ULong32();}