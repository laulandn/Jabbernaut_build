/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		Parser.cp *  Created:	2000-04-01 *  Authors:	CB - Chris Behm <cjbehm@mail.com> *				MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ * *	Based on code by Jonathan Wight <JWight@bigfoot.com>. Thank you, Jonathan! */#include "MacJLibUtils.h"#include "Parser.h"#include "Handler.h"#if USE_MACJLIB_NSnamespace MacJLib{#endifCAbstractParser::CAbstractParser(CAbstractHandler *inHandler)	:	mHandler(inHandler){}CAbstractParser::~CAbstractParser(){}void CAbstractParser::Parse(const std::string &inString){	Parse(inString.c_str(), inString.size());}void CAbstractParser::HandleStartElement(const std::string &inName, const CAttributeMap &inAttributeMap){	MJ_ASSERT( "mHandler==NULL", mHandler!=NULL )	mHandler->HandleStartElement(inName, inAttributeMap);}void CAbstractParser::HandleEndElement(const std::string &inName){	MJ_ASSERT( "mHandler==NULL", mHandler!=NULL )	mHandler->HandleEndElement(inName);}void CAbstractParser::HandleCharacterData(const std::string &inData){	MJ_ASSERT( "mHandler==NULL", mHandler!=NULL )	mHandler->HandleCharacterData(inData);}#if USE_MACJLIB_NS}#endif