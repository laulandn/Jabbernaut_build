/* *  This library is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public *  License as published by the Free Software Foundation; either *  version 2.1 of the License, or (at your option) any later version. * *  This library is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *  Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public *  License along with this library; if not, write to the Free Software *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA * *  Project:	MacJLib *  File:		Parser.cp *  Created:	2000-04-01 *  Authors:	CB - Chris Behm <cjbehm@mail.com> *				MH - Max Horn <max@quendi.de> * *  Copyright:	(C) 2000 The MacJLib Team http://macjlib.sourceforge.net/ * *	Based on code by Jonathan Wight <JWight@bigfoot.com>. Thank you, Jonathan! */#pragma once#include <stdlib.h>#include <map>#include <string>#if USE_MACJLIB_NSnamespace MacJLib{#endif	class CAbstractHandler;	typedef std::map <std::string, std::string> CAttributeMap;	class CAbstractParser	{		public:			CAbstractParser(CAbstractHandler *inHandler);			virtual ~CAbstractParser();			virtual void StartParsing(void) = 0L;			virtual void EndParsing(void) = 0L;						virtual void Parse(const std::string &inString);			virtual void Parse(const char *inText, const size_t inTextLength) = 0L;					virtual void HandleStartElement(const std::string &inName, const CAttributeMap &inAttributeMap);			virtual void HandleEndElement(const std::string &inName);			virtual void HandleCharacterData(const std::string &inData);		protected:			CAbstractHandler *mHandler;	};#if USE_MACJLIB_NS}#endif