=head1 IntroductionC<GUSI> is a POSIX library for MacOS. Its name, which is anacronym for I<Grand Unified Socket Interface>, hints at its original objective to provide access to all the various communications facilities in MacOS through acommon, file descriptor based, interface.The current incarnation, C<GUSI> 2, represents a much-needed rewrite of GUSI and introduces support for POSIX threads.The most recent version of C<GUSI> may be obtained by anonymous ftp from F<ftp://sunsite.cnlab-switch.ch/software/platforms/macos/src/mw_c>.There is also a mailing list devoted to discussions about C<GUSI>. You can join thelist by sending a mail to F<gusi-request@iis.ee.ethz.ch> whose body consists of the word C<subscribe>.=head2 User's ManualFor ease of access, the manual has been split up into a number of sections:   GUSI_Install   Installing and using the GUSI headers and libraries   GUSI_Common    Routines common to all file descriptors.   GUSI_Files     Routines specific to disk based file descriptors.   GUSI_Sockets   Routines specific to network descriptors.   GUSI_Threads   Routines to manage multiple threads of execution in a program.   GUSI_Misc      Miscellaneous routines=head2 GUSI User LicenseMy primary objective in distributing C<GUSI> is to have it used aswidely as possible, while protecting my moral rights of authorship andlimiting my exposure to liability.Copyright (C) 1992-2000 Matthias NeeracherPermission is granted to anyone to use this software for anypurpose on any computer system, and to redistribute it freely,subject to the following restrictions:=over 4=item *The author is not responsible for the consequences of use ofthis software, no matter how awful, even if they arisefrom defects in it.=item *The origin of this software must not be misrepresented, eitherby explicit claim or by omission.=item *You are allowed to distributed modified copies of the software, in sourceand binary form, provided they are marked plainly as altered versions, and are not misrepresented as being the original software.  =back=head2 Making Matthias HappyWhile I am giving C<GUSI> away for free, that does not mean that I don't like getting appreciation for it. If you want to do something for me beyond yourobligations outlined above, you can=over 4=item *Acknowledge the use of C<GUSI> in the about box of your application and/oryour documentation.=item *Send me a CD as described inF<http://www.iis.ee.ethz.ch/~neeri/macintosh/donations.html>=back=head2 Design ObjectivesThe primary objective of C<GUSI> is to emulate as much as practical of the UNIX 98 API for the use in MacOS programs. This is in marked contrast to otherapproaches which at first glance might seem similar:=over 4=item *C<GUSI> is I<not> designed for optimal performance of network communication(although C<GUSI> C<][> should be faster than C<GUSI> 1 for many purposes). Thedesign goal is to make the code as fast as possible without changing the POSIXAPI (e.g., by exposing interrupt level code to the library user).=item *C<GUSI> is I<not> designed for maximal compliance with the POSIX API either. Thegoal is to provide as much functionality and as faithful implementation as possiblewhile maintaining a strict library approach without writing a separate operatingsystem. =backWhile the original GUSI design had to appeal to nebulous "standards" eclecticallydrawn from POSIX and BSD APIs, the underlying APIs have now evolved into real standards, so C<GUSI> 2 now tries to conform to the I<X/Open Single Unix Specification,Version 2> (also known as C<UNIX> 98) as much as possible.=head2 Changes between C<GUSI> 1 and C<GUSI> 2I'm sure there must be more incompatibilities. If you find any, let me know.=over 4=item *The C<choose()> function has been dropped. I don't think it ever provided abenefit that outweighed the namespace intrusion.=item *C<inet_addr()> now returns a scalar instead of a C<string in_addr>, correctinga bizzare misinterpetation of the documentation on my part.=item *The BSD only C<scandir()> function has been dropped.=item *Many adjustments were made for UNIX 98 compatibility:=over 4=item C<select()> is now in F<sys/time.h>.=item Socket length arguments are now of type C<socklen_t>.=back=item * You no longer have to call the GUSISetup routines directly, GUSI will call them for you and you just have to link a configuration file.=item * The configuration file also handles most of what you needed a configuration resource for, so you normally no longer use one.=back=head2 LiteratureThis manual is by no means a complete reference, let alone a suitable tutorialfor the APIs covered. I found the following books the best texts in their fields:=over 4=item *For POSIX programming in general:	Advanced Programming in the UNIX Environment	W. Richard Stevens, Addison-Wesley	=item * For socket programming:	UNIX Network Programming, 2nd ed.	W. Richard Stevens, Prentice Hall	=item *For threads programming:	Programming with POSIX Threads	David R. Butenhof, Addison-Wesley=item *As a comprehensive UNIX 98 reference:	CAE Specification: System Interfaces and Headers Issue 5	The Open Group	A free online version of this document, as well as ordering information for the(expensive) hardcopy edition, is available atF<http://www.opengroup.org/pubs/catalog/t912.htm>=back=head2 AcknowledgementsC<GUSI> has over its existence profited from numerous suggestions and codecontributions. Where possible, I have tried to give credit to contributorsin the README file.Although probably no trace of it remains in today's code, GUSI grew from a socket library written by Charlie Reiman.Many of the header files in the F<:include:> subdirectory are adapted from BSD 4.4-lite.